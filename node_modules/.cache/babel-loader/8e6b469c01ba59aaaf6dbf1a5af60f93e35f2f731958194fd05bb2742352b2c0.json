{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\React Project\\\\Excel Web App\\\\excelwebapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as XLSX from 'xlsx';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport styles from './app-module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelAnalysisApp = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [columns, setColumns] = useState([]);\n  const [dataSummary, setDataSummary] = useState(null);\n  const [dataPreview, setDataPreview] = useState([]);\n  const [selectedOperation, setSelectedOperation] = useState('');\n  const [showFullPreview, setShowFullPreview] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [uniqueList, setUniqueList] = useState([]);\n  const [fullData, setFullData] = useState([]);\n  const [pivotConfig, setPivotConfig] = useState({\n    rows: [],\n    cols: [],\n    vals: [],\n    aggregatorName: \"Count\",\n    rendererName: \"Table\"\n  });\n  const [pivotData, setPivotData] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const [activeTab, setActiveTab] = useState('data');\n  const handleFileUpload = event => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1,\n        raw: false,\n        dateNF: 'yyyy-mm-dd'\n      });\n      const headers = jsonData[0];\n      const rows = jsonData.slice(1);\n      const columnsInfo = headers.map(header => ({\n        name: header,\n        type: inferColumnType(rows.map(row => row[headers.indexOf(header)]))\n      }));\n      const processedData = rows.map(row => Object.fromEntries(headers.map((header, i) => {\n        const value = row[i];\n        const columnType = columnsInfo.find(col => col.name === header).type;\n        if (columnType === 'date') {\n          // Convert Excel date number to JavaScript Date object\n          return [header, new Date(Math.round((value - 25569) * 86400 * 1000))];\n        }\n        return [header, value];\n      })));\n      setColumns(columnsInfo);\n      setFullData(processedData);\n      setDataPreview(processedData.slice(0, 5));\n      setDataSummary({\n        rowCount: rows.length,\n        columnCount: headers.length,\n        numericColumns: columnsInfo.filter(col => col.type === 'number').map(col => col.name),\n        categoricalColumns: columnsInfo.filter(col => col.type === 'string').map(col => col.name),\n        dateColumns: columnsInfo.filter(col => col.type === 'date').map(col => col.name)\n      });\n    };\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n  const inferColumnType = values => {\n    const nonNullValues = values.filter(v => v != null);\n    if (nonNullValues.every(v => !isNaN(v))) return 'number';\n    if (nonNullValues.every(v => !isNaN(Date.parse(v)))) return 'date';\n    return 'string';\n  };\n  const handleOperationSelect = operation => {\n    setSelectedOperation(operation);\n  };\n  const handleColumnSelect = columnName => {\n    setSelectedColumns(prev => prev.includes(columnName) ? prev.filter(col => col !== columnName) : [...prev, columnName]);\n  };\n  const createUniqueList = () => {\n    if (selectedColumns.length === 0) return;\n    const uniqueValues = new Set();\n    fullData.forEach(row => {\n      const combinedValue = selectedColumns.map(col => row[col]).join(' - ');\n      uniqueValues.add(combinedValue);\n    });\n    setUniqueList(Array.from(uniqueValues));\n  };\n  const handlePivotConfigChange = config => {\n    setPivotConfig(config);\n    updatePivotAndChartData(config);\n  };\n  const updatePivotAndChartData = config => {\n    if (fullData.length === 0) return;\n\n    // Create pivot data\n    const pivotResult = fullData.reduce((acc, row) => {\n      const rowKey = config.rows.map(r => row[r]).join('-');\n      const colKey = config.cols.map(c => row[c]).join('-');\n      const value = config.vals.length > 0 ? Number(row[config.vals[0]]) || 0 : 1;\n      if (!acc[rowKey]) acc[rowKey] = {};\n      if (!acc[rowKey][colKey]) acc[rowKey][colKey] = 0;\n      acc[rowKey][colKey] += value;\n      return acc;\n    }, {});\n    setPivotData(pivotResult);\n\n    // Create chart data\n    const chartData = Object.entries(pivotResult).map(([rowKey, colValues]) => ({\n      name: rowKey,\n      ...colValues\n    }));\n    setChartData(chartData);\n  };\n  useEffect(() => {\n    if (fullData.length > 0 && (pivotConfig.rows.length > 0 || pivotConfig.cols.length > 0)) {\n      updatePivotAndChartData(pivotConfig);\n    }\n  }, [fullData, pivotConfig]);\n  const operations = [{\n    name: 'Create Pivot Table',\n    value: 'pivot'\n  }, {\n    name: 'Create Chart',\n    value: 'chart'\n  }, {\n    name: 'Generate VBA Code',\n    value: 'vba'\n  }, {\n    name: 'Create Macro',\n    value: 'macro'\n  }, {\n    name: 'Summarize Data',\n    value: 'summary'\n  }, {\n    name: 'Map Data',\n    value: 'map'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Excel Analysis Web App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileUpload,\n        accept: \".xlsx, .xls\",\n        className: styles.fileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.fileInfo,\n        children: [\"File uploaded: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Column Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), columns.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: col.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: col.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload a file to see column information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Data Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), dataSummary ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.summaryList,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Total Rows: \", dataSummary.rowCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Total Columns: \", dataSummary.columnCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Numeric Columns: \", dataSummary.numericColumns.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Categorical Columns: \", dataSummary.categoricalColumns.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Date Columns: \", dataSummary.dateColumns.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload a file to see data summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Data Preview\", dataPreview.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFullPreview(!showFullPreview),\n          className: styles.button,\n          children: showFullPreview ? 'Show Less' : 'Show More'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), dataPreview.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tableWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: col.name\n              }, col.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: (showFullPreview ? fullData : dataPreview).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: col.type === 'date' ? row[col.name].toISOString().split('T')[0] : row[col.name]\n              }, col.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 23\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a file to see data preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Unique List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.checkboxGroup,\n        children: columns.map(col => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.checkboxLabel,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedColumns.includes(col.name),\n            onChange: () => handleColumnSelect(col.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: col.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, col.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createUniqueList,\n        disabled: selectedColumns.length === 0,\n        className: styles.button,\n        children: \"Create Unique List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), uniqueList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.uniqueList,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unique Values:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uniqueList.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pivot Table and Chart Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: pivotConfig.rows,\n            onChange: e => setPivotConfig({\n              ...pivotConfig,\n              rows: Array.from(e.target.selectedOptions, option => option.value)\n            }),\n            className: styles.select,\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: col.name,\n              children: col.name\n            }, col.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 35\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Columns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: pivotConfig.cols,\n            onChange: e => setPivotConfig({\n              ...pivotConfig,\n              cols: Array.from(e.target.selectedOptions, option => option.value)\n            }),\n            className: styles.select,\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: col.name,\n              children: col.name\n            }, col.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 35\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Values\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: pivotConfig.vals[0] || '',\n            onChange: e => setPivotConfig({\n              ...pivotConfig,\n              vals: [e.target.value]\n            }),\n            className: styles.select,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), columns.filter(col => col.type === 'number').map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: col.name,\n              children: col.name\n            }, col.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 72\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('data'),\n        className: `${styles.button} ${activeTab === 'data' ? styles.activeTab : ''}`,\n        children: \"Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('pivot'),\n        className: `${styles.button} ${activeTab === 'pivot' ? styles.activeTab : ''}`,\n        children: \"Pivot Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('chart'),\n        className: `${styles.button} ${activeTab === 'chart' ? styles.activeTab : ''}`,\n        children: \"Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), activeTab === 'data' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.section,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Data Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), activeTab === 'pivot' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pivot Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), fullData.length > 0 ? /*#__PURE__*/_jsxDEV(PivotTableUI, {\n        data: fullData,\n        onChange: handlePivotConfigChange,\n        ...pivotConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a file and configure the pivot table to see results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), activeTab === 'chart' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), chartData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this), Object.keys(chartData[0]).filter(key => key !== 'name').map((key, index) => /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: key,\n            fill: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Configure the pivot table to see the chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Operation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.operationButtons,\n        children: operations.map(op => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOperationSelect(op.value),\n          className: `${styles.button} ${selectedOperation === op.value ? styles.activeOperation : ''}`,\n          disabled: !file,\n          children: op.name\n        }, op.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), selectedOperation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Operation Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result for \", selectedOperation, \" operation would be displayed here\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelAnalysisApp, \"WbGduH44kgnHLif+oiJc0aToLmA=\");\n_c = ExcelAnalysisApp;\nexport default ExcelAnalysisApp;\nvar _c;\n$RefreshReg$(_c, \"ExcelAnalysisApp\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","PivotTableUI","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","styles","jsxDEV","_jsxDEV","ExcelAnalysisApp","_s","file","setFile","columns","setColumns","dataSummary","setDataSummary","dataPreview","setDataPreview","selectedOperation","setSelectedOperation","showFullPreview","setShowFullPreview","selectedColumns","setSelectedColumns","uniqueList","setUniqueList","fullData","setFullData","pivotConfig","setPivotConfig","rows","cols","vals","aggregatorName","rendererName","pivotData","setPivotData","chartData","setChartData","activeTab","setActiveTab","handleFileUpload","event","uploadedFile","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","raw","dateNF","headers","slice","columnsInfo","map","name","inferColumnType","row","indexOf","processedData","Object","fromEntries","i","value","columnType","find","col","Date","Math","round","rowCount","length","columnCount","numericColumns","filter","categoricalColumns","dateColumns","readAsArrayBuffer","values","nonNullValues","v","every","isNaN","parse","handleOperationSelect","operation","handleColumnSelect","columnName","prev","includes","createUniqueList","uniqueValues","Set","forEach","combinedValue","join","add","Array","from","handlePivotConfigChange","config","updatePivotAndChartData","pivotResult","reduce","acc","rowKey","r","colKey","c","Number","entries","colValues","operations","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","section","onChange","accept","fileInput","fileInfo","grid","table","index","summaryList","onClick","button","tableWrapper","toISOString","split","checkboxGroup","checkboxLabel","checked","disabled","multiple","selectedOptions","option","select","tabButtons","width","height","strokeDasharray","dataKey","keys","key","fill","floor","random","toString","operationButtons","op","activeOperation","_c","$RefreshReg$"],"sources":["D:/Development/React Project/Excel Web App/excelwebapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as XLSX from 'xlsx';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport styles from './app-module.css';\n\nconst ExcelAnalysisApp = () => {\n  const [file, setFile] = useState(null);\n  const [columns, setColumns] = useState([]);\n  const [dataSummary, setDataSummary] = useState(null);\n  const [dataPreview, setDataPreview] = useState([]);\n  const [selectedOperation, setSelectedOperation] = useState('');\n  const [showFullPreview, setShowFullPreview] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [uniqueList, setUniqueList] = useState([]);\n  const [fullData, setFullData] = useState([]);\n  const [pivotConfig, setPivotConfig] = useState({\n    rows: [],\n    cols: [],\n    vals: [],\n    aggregatorName: \"Count\",\n    rendererName: \"Table\"\n  });\n  const [pivotData, setPivotData] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const [activeTab, setActiveTab] = useState('data');\n\n  const handleFileUpload = (event) => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, raw: false, dateNF: 'yyyy-mm-dd' });\n\n      const headers = jsonData[0];\n      const rows = jsonData.slice(1);\n\n      const columnsInfo = headers.map(header => ({\n        name: header,\n        type: inferColumnType(rows.map(row => row[headers.indexOf(header)]))\n      }));\n\n      const processedData = rows.map(row => \n        Object.fromEntries(headers.map((header, i) => {\n          const value = row[i];\n          const columnType = columnsInfo.find(col => col.name === header).type;\n          if (columnType === 'date') {\n            // Convert Excel date number to JavaScript Date object\n            return [header, new Date(Math.round((value - 25569) * 86400 * 1000))];\n          }\n          return [header, value];\n        }))\n      );\n\n      setColumns(columnsInfo);\n      setFullData(processedData);\n      setDataPreview(processedData.slice(0, 5));\n\n      setDataSummary({\n        rowCount: rows.length,\n        columnCount: headers.length,\n        numericColumns: columnsInfo.filter(col => col.type === 'number').map(col => col.name),\n        categoricalColumns: columnsInfo.filter(col => col.type === 'string').map(col => col.name),\n        dateColumns: columnsInfo.filter(col => col.type === 'date').map(col => col.name)\n      });\n    };\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  const inferColumnType = (values) => {\n    const nonNullValues = values.filter(v => v != null);\n    if (nonNullValues.every(v => !isNaN(v))) return 'number';\n    if (nonNullValues.every(v => !isNaN(Date.parse(v)))) return 'date';\n    return 'string';\n  };\n\n  const handleOperationSelect = (operation) => {\n    setSelectedOperation(operation);\n  };\n\n  const handleColumnSelect = (columnName) => {\n    setSelectedColumns(prev => \n      prev.includes(columnName) \n        ? prev.filter(col => col !== columnName)\n        : [...prev, columnName]\n    );\n  };\n\n  const createUniqueList = () => {\n    if (selectedColumns.length === 0) return;\n\n    const uniqueValues = new Set();\n    fullData.forEach(row => {\n      const combinedValue = selectedColumns.map(col => row[col]).join(' - ');\n      uniqueValues.add(combinedValue);\n    });\n\n    setUniqueList(Array.from(uniqueValues));\n  };\n  \n  const handlePivotConfigChange = (config) => {\n    setPivotConfig(config);\n    updatePivotAndChartData(config);\n  };\n  \n  const updatePivotAndChartData = (config) => {\n    if (fullData.length === 0) return;\n  \n    // Create pivot data\n    const pivotResult = fullData.reduce((acc, row) => {\n      const rowKey = config.rows.map(r => row[r]).join('-');\n      const colKey = config.cols.map(c => row[c]).join('-');\n      const value = config.vals.length > 0 ? Number(row[config.vals[0]]) || 0 : 1;\n  \n      if (!acc[rowKey]) acc[rowKey] = {};\n      if (!acc[rowKey][colKey]) acc[rowKey][colKey] = 0;\n      acc[rowKey][colKey] += value;\n  \n      return acc;\n    }, {});\n  \n    setPivotData(pivotResult);\n  \n    // Create chart data\n    const chartData = Object.entries(pivotResult).map(([rowKey, colValues]) => ({\n      name: rowKey,\n      ...colValues\n    }));\n    setChartData(chartData);\n  };\n  \n\n  useEffect(() => {\n    if (fullData.length > 0 && (pivotConfig.rows.length > 0 || pivotConfig.cols.length > 0)) {\n      updatePivotAndChartData(pivotConfig);\n    }\n  }, [fullData, pivotConfig]);\n  \n  const operations = [\n    { name: 'Create Pivot Table', value: 'pivot' },\n    { name: 'Create Chart', value: 'chart' },\n    { name: 'Generate VBA Code', value: 'vba' },\n    { name: 'Create Macro', value: 'macro' },\n    { name: 'Summarize Data', value: 'summary' },\n    { name: 'Map Data', value: 'map' }\n  ];\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Excel Analysis Web App</h1>\n      \n      <div className={styles.section}>\n        <h2>File Upload</h2>\n        <input type=\"file\" onChange={handleFileUpload} accept=\".xlsx, .xls\" className={styles.fileInput} />\n        {file && <p className={styles.fileInfo}>File uploaded: {file.name}</p>}\n      </div>\n\n      <div className={styles.grid}>\n        <div className={styles.section}>\n          <h2>Column Information</h2>\n          {columns.length > 0 ? (\n            <table className={styles.table}>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                </tr>\n              </thead>\n              <tbody>\n                {columns.map((col, index) => (\n                  <tr key={index}>\n                    <td>{col.name}</td>\n                    <td>{col.type}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p>Upload a file to see column information</p>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2>Data Summary</h2>\n          {dataSummary ? (\n            <ul className={styles.summaryList}>\n              <li>Total Rows: {dataSummary.rowCount}</li>\n              <li>Total Columns: {dataSummary.columnCount}</li>\n              <li>Numeric Columns: {dataSummary.numericColumns.join(', ')}</li>\n              <li>Categorical Columns: {dataSummary.categoricalColumns.join(', ')}</li>\n              <li>Date Columns: {dataSummary.dateColumns.join(', ')}</li>\n            </ul>\n          ) : (\n            <p>Upload a file to see data summary</p>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.section}>\n        <h2>\n          Data Preview\n          {dataPreview.length > 0 && (\n            <button onClick={() => setShowFullPreview(!showFullPreview)} className={styles.button}>\n              {showFullPreview ? 'Show Less' : 'Show More'}\n            </button>\n          )}\n        </h2>\n        {dataPreview.length > 0 ? (\n          <div className={styles.tableWrapper}>\n            <table className={styles.table}>\n              <thead>\n                <tr>\n                  {columns.map((col) => (\n                    <th key={col.name}>{col.name}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {(showFullPreview ? fullData : dataPreview).map((row, index) => (\n                  <tr key={index}>\n                    {columns.map((col) => (\n                      <td key={col.name}>\n                        {col.type === 'date' \n                          ? row[col.name].toISOString().split('T')[0] \n                          : row[col.name]}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <p>Upload a file to see data preview</p>\n        )}\n      </div>\n\n      <div className={styles.section}>\n        <h2>Create Unique List</h2>\n        <div className={styles.checkboxGroup}>\n          {columns.map((col) => (\n            <label key={col.name} className={styles.checkboxLabel}>\n              <input \n                type=\"checkbox\"\n                checked={selectedColumns.includes(col.name)}\n                onChange={() => handleColumnSelect(col.name)}\n              />\n              <span>{col.name}</span>\n            </label>\n          ))}\n        </div>\n        <button onClick={createUniqueList} disabled={selectedColumns.length === 0} className={styles.button}>\n          Create Unique List\n        </button>\n        {uniqueList.length > 0 && (\n          <div className={styles.uniqueList}>\n            <h3>Unique Values:</h3>\n            <ul>\n              {uniqueList.map((value, index) => (\n                <li key={index}>{value}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n\n      <div className={styles.section}>\n        <h2>Pivot Table and Chart Configuration</h2>\n        <div className={styles.grid}>\n          <div>\n            <h3>Rows</h3>\n            <select \n              multiple \n              value={pivotConfig.rows} \n              onChange={(e) => setPivotConfig({...pivotConfig, rows: Array.from(e.target.selectedOptions, option => option.value)})}\n              className={styles.select}\n            >\n              {columns.map(col => <option key={col.name} value={col.name}>{col.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <h3>Columns</h3>\n            <select \n              multiple \n              value={pivotConfig.cols} \n              onChange={(e) => setPivotConfig({...pivotConfig, cols: Array.from(e.target.selectedOptions, option => option.value)})}\n              className={styles.select}\n            >\n              {columns.map(col => <option key={col.name} value={col.name}>{col.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <h3>Values</h3>\n            <select \n              value={pivotConfig.vals[0] || ''} \n              onChange={(e) => setPivotConfig({...pivotConfig, vals: [e.target.value]})}\n              className={styles.select}\n            >\n              <option value=\"\">Select a value</option>\n              {columns.filter(col => col.type === 'number').map(col => <option key={col.name} value={col.name}>{col.name}</option>)}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.tabButtons}>\n        <button onClick={() => setActiveTab('data')} className={`${styles.button} ${activeTab === 'data' ? styles.activeTab : ''}`}>Data</button>\n        <button onClick={() => setActiveTab('pivot')} className={`${styles.button} ${activeTab === 'pivot' ? styles.activeTab : ''}`}>Pivot Table</button>\n        <button onClick={() => setActiveTab('chart')} className={`${styles.button} ${activeTab === 'chart' ? styles.activeTab : ''}`}>Chart</button>\n      </div>\n\n      {activeTab === 'data' && (\n        <div className={styles.section}>\n          <h2>Data Preview</h2>\n          {/* ... (keep the existing data preview table) */}\n        </div>\n      )}\n\n      {activeTab === 'pivot' && (\n        <div className={styles.section}>\n          <h2>Pivot Table</h2>\n          {fullData.length > 0 ? (\n            <PivotTableUI\n              data={fullData}\n              onChange={handlePivotConfigChange}\n              {...pivotConfig}\n            />\n          ) : (\n            <p>Upload a file and configure the pivot table to see results</p>\n          )}\n        </div>\n      )}\n\n      {activeTab === 'chart' && (\n        <div className={styles.section}>\n          <h2>Chart</h2>\n          {chartData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height={400}>\n              <BarChart data={chartData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                {Object.keys(chartData[0]).filter(key => key !== 'name').map((key, index) => (\n                  <Bar key={key} dataKey={key} fill={`#${Math.floor(Math.random()*16777215).toString(16)}`} />\n                ))}\n              </BarChart>\n            </ResponsiveContainer>\n          ) : (\n            <p>Configure the pivot table to see the chart</p>\n          )}\n        </div>\n      )}\n\n      <div className={styles.section}>\n        <h2>Select Operation</h2>\n        <div className={styles.operationButtons}>\n          {operations.map((op) => (\n            <button\n              key={op.value}\n              onClick={() => handleOperationSelect(op.value)}\n              className={`${styles.button} ${selectedOperation === op.value ? styles.activeOperation : ''}`}\n              disabled={!file}\n            >\n              {op.name}\n            </button>\n          ))}\n        </div>\n      </div>\n      \n      {selectedOperation && (\n        <div className={styles.section}>\n          <h2>Operation Result</h2>\n          <p>Result for {selectedOperation} operation would be displayed here</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExcelAnalysisApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}