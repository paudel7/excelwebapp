{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\React Project\\\\Excel Web App\\\\excelwebapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelAnalysisApp = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [columns, setColumns] = useState([]);\n  const [dataSummary, setDataSummary] = useState(null);\n  const [dataPreview, setDataPreview] = useState([]);\n  const [selectedOperation, setSelectedOperation] = useState('');\n  const [showFullPreview, setShowFullPreview] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [uniqueList, setUniqueList] = useState([]);\n  const [fullData, setFullData] = useState([]);\n  const handleFileUpload = event => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n      const headers = jsonData[0];\n      const rows = jsonData.slice(1);\n      const columnsInfo = headers.map(header => ({\n        name: header,\n        type: inferColumnType(rows.map(row => row[headers.indexOf(header)]))\n      }));\n      const processedData = rows.map(row => Object.fromEntries(headers.map((header, i) => [header, row[i]])));\n      setColumns(columnsInfo);\n      setFullData(processedData);\n      setDataPreview(processedData.slice(0, 5));\n      setDataSummary({\n        rowCount: rows.length,\n        columnCount: headers.length,\n        numericColumns: columnsInfo.filter(col => col.type === 'number').map(col => col.name),\n        categoricalColumns: columnsInfo.filter(col => col.type === 'string').map(col => col.name),\n        dateColumns: columnsInfo.filter(col => col.type === 'date').map(col => col.name)\n      });\n    };\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n  const inferColumnType = values => {\n    const nonNullValues = values.filter(v => v != null);\n    if (nonNullValues.every(v => !isNaN(v))) return 'number';\n    if (nonNullValues.every(v => !isNaN(Date.parse(v)))) return 'date';\n    return 'string';\n  };\n  const handleOperationSelect = operation => {\n    setSelectedOperation(operation);\n  };\n  const handleColumnSelect = columnName => {\n    setSelectedColumns(prev => prev.includes(columnName) ? prev.filter(col => col !== columnName) : [...prev, columnName]);\n  };\n  const createUniqueList = () => {\n    if (selectedColumns.length === 0) return;\n    const uniqueValues = new Set();\n    fullData.forEach(row => {\n      const combinedValue = selectedColumns.map(col => row[col]).join(' - ');\n      uniqueValues.add(combinedValue);\n    });\n    setUniqueList(Array.from(uniqueValues));\n  };\n  const operations = [{\n    name: 'Create Pivot Table',\n    value: 'pivot'\n  }, {\n    name: 'Create Chart',\n    value: 'chart'\n  }, {\n    name: 'Generate VBA Code',\n    value: 'vba'\n  }, {\n    name: 'Create Macro',\n    value: 'macro'\n  }, {\n    name: 'Summarize Data',\n    value: 'summary'\n  }, {\n    name: 'Map Data',\n    value: 'map'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        marginBottom: '1rem'\n      },\n      children: \"Excel Analysis Web App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem',\n        border: '1px solid #ccc',\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileUpload,\n        accept: \".xlsx, .xls\",\n        style: {\n          marginBottom: '0.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File uploaded: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Column Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), columns.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: col.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: col.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload a file to see column information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Data Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), dataSummary ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Total Rows: \", dataSummary.rowCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Total Columns: \", dataSummary.columnCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Numeric Columns: \", dataSummary.numericColumns.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Categorical Columns: \", dataSummary.categoricalColumns.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Date Columns: \", dataSummary.dateColumns.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload a file to see data summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem',\n        border: '1px solid #ccc',\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Data Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), dataPreview.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFullPreview(!showFullPreview),\n          children: showFullPreview ? 'Show Less' : 'Show More'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), dataPreview.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowX: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '0.5rem',\n                  border: '1px solid #ccc'\n                },\n                children: col.name\n              }, col.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: (showFullPreview ? fullData : dataPreview).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '0.5rem',\n                  border: '1px solid #ccc'\n                },\n                children: row[col.name]\n              }, col.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a file to see data preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem',\n        border: '1px solid #ccc',\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Unique List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: columns.map(col => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedColumns.includes(col.name),\n            onChange: () => handleColumnSelect(col.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '0.5rem'\n            },\n            children: col.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, col.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createUniqueList,\n        disabled: selectedColumns.length === 0,\n        children: \"Create Unique List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), uniqueList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontWeight: 'bold',\n            marginBottom: '0.5rem'\n          },\n          children: \"Unique Values:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uniqueList.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Operation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 1fr)',\n          gap: '0.5rem'\n        },\n        children: operations.map(op => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOperationSelect(op.value),\n          style: {\n            padding: '0.5rem',\n            backgroundColor: selectedOperation === op.value ? '#3b82f6' : '#e5e7eb',\n            color: selectedOperation === op.value ? 'white' : 'black',\n            border: 'none',\n            borderRadius: '0.25rem',\n            cursor: 'pointer'\n          },\n          disabled: !file,\n          children: op.name\n        }, op.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), selectedOperation && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        border: '1px solid #ccc',\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Operation Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result for \", selectedOperation, \" operation would be displayed here\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelAnalysisApp, \"ntuPwk0/hL3Xj0gsIJe7NDeDNfM=\");\n_c = ExcelAnalysisApp;\nexport default ExcelAnalysisApp;\nvar _c;\n$RefreshReg$(_c, \"ExcelAnalysisApp\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","ExcelAnalysisApp","_s","file","setFile","columns","setColumns","dataSummary","setDataSummary","dataPreview","setDataPreview","selectedOperation","setSelectedOperation","showFullPreview","setShowFullPreview","selectedColumns","setSelectedColumns","uniqueList","setUniqueList","fullData","setFullData","handleFileUpload","event","uploadedFile","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","headers","rows","slice","columnsInfo","map","name","inferColumnType","row","indexOf","processedData","Object","fromEntries","i","rowCount","length","columnCount","numericColumns","filter","col","categoricalColumns","dateColumns","readAsArrayBuffer","values","nonNullValues","v","every","isNaN","Date","parse","handleOperationSelect","operation","handleColumnSelect","columnName","prev","includes","createUniqueList","uniqueValues","Set","forEach","combinedValue","join","add","Array","from","operations","value","style","padding","children","fontSize","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","border","onChange","accept","display","gridTemplateColumns","gap","width","textAlign","index","justifyContent","alignItems","onClick","overflowX","checked","marginLeft","disabled","marginTop","op","backgroundColor","color","borderRadius","cursor","_c","$RefreshReg$"],"sources":["D:/Development/React Project/Excel Web App/excelwebapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\n\nconst ExcelAnalysisApp = () => {\n  const [file, setFile] = useState(null);\n  const [columns, setColumns] = useState([]);\n  const [dataSummary, setDataSummary] = useState(null);\n  const [dataPreview, setDataPreview] = useState([]);\n  const [selectedOperation, setSelectedOperation] = useState('');\n  const [showFullPreview, setShowFullPreview] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [uniqueList, setUniqueList] = useState([]);\n  const [fullData, setFullData] = useState([]);\n\n  const handleFileUpload = (event) => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n      const headers = jsonData[0];\n      const rows = jsonData.slice(1);\n\n      const columnsInfo = headers.map(header => ({\n        name: header,\n        type: inferColumnType(rows.map(row => row[headers.indexOf(header)]))\n      }));\n\n      const processedData = rows.map(row => \n        Object.fromEntries(headers.map((header, i) => [header, row[i]]))\n      );\n\n      setColumns(columnsInfo);\n      setFullData(processedData);\n      setDataPreview(processedData.slice(0, 5));\n\n      setDataSummary({\n        rowCount: rows.length,\n        columnCount: headers.length,\n        numericColumns: columnsInfo.filter(col => col.type === 'number').map(col => col.name),\n        categoricalColumns: columnsInfo.filter(col => col.type === 'string').map(col => col.name),\n        dateColumns: columnsInfo.filter(col => col.type === 'date').map(col => col.name)\n      });\n    };\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  const inferColumnType = (values) => {\n    const nonNullValues = values.filter(v => v != null);\n    if (nonNullValues.every(v => !isNaN(v))) return 'number';\n    if (nonNullValues.every(v => !isNaN(Date.parse(v)))) return 'date';\n    return 'string';\n  };\n\n  const handleOperationSelect = (operation) => {\n    setSelectedOperation(operation);\n  };\n\n  const handleColumnSelect = (columnName) => {\n    setSelectedColumns(prev => \n      prev.includes(columnName) \n        ? prev.filter(col => col !== columnName)\n        : [...prev, columnName]\n    );\n  };\n\n  const createUniqueList = () => {\n    if (selectedColumns.length === 0) return;\n\n    const uniqueValues = new Set();\n    fullData.forEach(row => {\n      const combinedValue = selectedColumns.map(col => row[col]).join(' - ');\n      uniqueValues.add(combinedValue);\n    });\n\n    setUniqueList(Array.from(uniqueValues));\n  };\n\n  const operations = [\n    { name: 'Create Pivot Table', value: 'pivot' },\n    { name: 'Create Chart', value: 'chart' },\n    { name: 'Generate VBA Code', value: 'vba' },\n    { name: 'Create Macro', value: 'macro' },\n    { name: 'Summarize Data', value: 'summary' },\n    { name: 'Map Data', value: 'map' }\n  ];\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <h1 style={{ fontSize: '1.5rem', fontWeight: 'bold', marginBottom: '1rem' }}>Excel Analysis Web App</h1>\n      \n      <div style={{ marginBottom: '1rem', border: '1px solid #ccc', padding: '1rem' }}>\n        <h2>File Upload</h2>\n        <input type=\"file\" onChange={handleFileUpload} accept=\".xlsx, .xls\" style={{ marginBottom: '0.5rem' }} />\n        {file && <p>File uploaded: {file.name}</p>}\n      </div>\n\n      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '1rem', marginBottom: '1rem' }}>\n        <div style={{ border: '1px solid #ccc', padding: '1rem' }}>\n          <h2>Column Information</h2>\n          {columns.length > 0 ? (\n            <table style={{ width: '100%' }}>\n              <thead>\n                <tr>\n                  <th style={{ textAlign: 'left' }}>Name</th>\n                  <th style={{ textAlign: 'left' }}>Type</th>\n                </tr>\n              </thead>\n              <tbody>\n                {columns.map((col, index) => (\n                  <tr key={index}>\n                    <td>{col.name}</td>\n                    <td>{col.type}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p>Upload a file to see column information</p>\n          )}\n        </div>\n\n        <div style={{ border: '1px solid #ccc', padding: '1rem' }}>\n          <h2>Data Summary</h2>\n          {dataSummary ? (\n            <ul>\n              <li>Total Rows: {dataSummary.rowCount}</li>\n              <li>Total Columns: {dataSummary.columnCount}</li>\n              <li>Numeric Columns: {dataSummary.numericColumns.join(', ')}</li>\n              <li>Categorical Columns: {dataSummary.categoricalColumns.join(', ')}</li>\n              <li>Date Columns: {dataSummary.dateColumns.join(', ')}</li>\n            </ul>\n          ) : (\n            <p>Upload a file to see data summary</p>\n          )}\n        </div>\n      </div>\n\n      <div style={{ marginBottom: '1rem', border: '1px solid #ccc', padding: '1rem' }}>\n        <h2 style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <span>Data Preview</span>\n          {dataPreview.length > 0 && (\n            <button onClick={() => setShowFullPreview(!showFullPreview)}>\n              {showFullPreview ? 'Show Less' : 'Show More'}\n            </button>\n          )}\n        </h2>\n        {dataPreview.length > 0 ? (\n          <div style={{ overflowX: 'auto' }}>\n            <table style={{ width: '100%' }}>\n              <thead>\n                <tr>\n                  {columns.map((col) => (\n                    <th key={col.name} style={{ textAlign: 'left', padding: '0.5rem', border: '1px solid #ccc' }}>{col.name}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {(showFullPreview ? fullData : dataPreview).map((row, index) => (\n                  <tr key={index}>\n                    {columns.map((col) => (\n                      <td key={col.name} style={{ padding: '0.5rem', border: '1px solid #ccc' }}>{row[col.name]}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <p>Upload a file to see data preview</p>\n        )}\n      </div>\n\n      <div style={{ marginBottom: '1rem', border: '1px solid #ccc', padding: '1rem' }}>\n        <h2>Create Unique List</h2>\n        <div style={{ marginBottom: '1rem' }}>\n          {columns.map((col) => (\n            <label key={col.name} style={{ display: 'flex', alignItems: 'center', marginBottom: '0.5rem' }}>\n              <input \n                type=\"checkbox\"\n                checked={selectedColumns.includes(col.name)}\n                onChange={() => handleColumnSelect(col.name)}\n              />\n              <span style={{ marginLeft: '0.5rem' }}>{col.name}</span>\n            </label>\n          ))}\n        </div>\n        <button onClick={createUniqueList} disabled={selectedColumns.length === 0}>\n          Create Unique List\n        </button>\n        {uniqueList.length > 0 && (\n          <div style={{ marginTop: '1rem' }}>\n            <h3 style={{ fontWeight: 'bold', marginBottom: '0.5rem' }}>Unique Values:</h3>\n            <ul>\n              {uniqueList.map((value, index) => (\n                <li key={index}>{value}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n\n      <div style={{ border: '1px solid #ccc', padding: '1rem' }}>\n        <h2>Select Operation</h2>\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '0.5rem' }}>\n          {operations.map((op) => (\n            <button\n              key={op.value}\n              onClick={() => handleOperationSelect(op.value)}\n              style={{\n                padding: '0.5rem',\n                backgroundColor: selectedOperation === op.value ? '#3b82f6' : '#e5e7eb',\n                color: selectedOperation === op.value ? 'white' : 'black',\n                border: 'none',\n                borderRadius: '0.25rem',\n                cursor: 'pointer'\n              }}\n              disabled={!file}\n            >\n              {op.name}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {selectedOperation && (\n        <div style={{ marginTop: '1rem', border: '1px solid #ccc', padding: '1rem' }}>\n          <h2>Operation Result</h2>\n          <p>Result for {selectedOperation} operation would be displayed here</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExcelAnalysisApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}