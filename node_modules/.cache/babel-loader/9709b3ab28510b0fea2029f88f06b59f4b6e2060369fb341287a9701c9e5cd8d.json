{"ast":null,"code":"import React,{useState,useEffect}from'react';import*as XLSX from'xlsx';import PivotTableUI from'react-pivottable/PivotTableUI';import'react-pivottable/pivottable.css';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from'recharts';import styles from'./app-module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExcelAnalysisApp=()=>{const[file,setFile]=useState(null);const[columns,setColumns]=useState([]);const[dataSummary,setDataSummary]=useState(null);const[dataPreview,setDataPreview]=useState([]);const[selectedOperation,setSelectedOperation]=useState('');const[showFullPreview,setShowFullPreview]=useState(false);const[selectedColumns,setSelectedColumns]=useState([]);const[uniqueList,setUniqueList]=useState([]);const[fullData,setFullData]=useState([]);const[pivotConfig,setPivotConfig]=useState({rows:[],cols:[],vals:[],aggregatorName:\"Count\",rendererName:\"Table\"});const[pivotData,setPivotData]=useState([]);const[chartData,setChartData]=useState([]);const[activeTab,setActiveTab]=useState('data');const handleFileUpload=event=>{const uploadedFile=event.target.files[0];setFile(uploadedFile);const reader=new FileReader();reader.onload=e=>{const data=new Uint8Array(e.target.result);const workbook=XLSX.read(data,{type:'array'});const sheetName=workbook.SheetNames[0];const worksheet=workbook.Sheets[sheetName];const jsonData=XLSX.utils.sheet_to_json(worksheet,{header:1,raw:false,dateNF:'yyyy-mm-dd'});const headers=jsonData[0];const rows=jsonData.slice(1);const columnsInfo=headers.map(header=>({name:header,type:inferColumnType(rows.map(row=>row[headers.indexOf(header)]))}));const processedData=rows.map(row=>Object.fromEntries(headers.map((header,i)=>{const value=row[i];const columnType=columnsInfo.find(col=>col.name===header).type;if(columnType==='date'){// Convert Excel date number to JavaScript Date object\nreturn[header,new Date(Math.round((value-25569)*86400*1000))];}return[header,value];})));setColumns(columnsInfo);setFullData(processedData);setDataPreview(processedData.slice(0,5));setDataSummary({rowCount:rows.length,columnCount:headers.length,numericColumns:columnsInfo.filter(col=>col.type==='number').map(col=>col.name),categoricalColumns:columnsInfo.filter(col=>col.type==='string').map(col=>col.name),dateColumns:columnsInfo.filter(col=>col.type==='date').map(col=>col.name)});};reader.readAsArrayBuffer(uploadedFile);};const inferColumnType=values=>{const nonNullValues=values.filter(v=>v!=null);if(nonNullValues.every(v=>!isNaN(v)))return'number';if(nonNullValues.every(v=>!isNaN(Date.parse(v))))return'date';return'string';};const handleOperationSelect=operation=>{setSelectedOperation(operation);};const handleColumnSelect=columnName=>{setSelectedColumns(prev=>prev.includes(columnName)?prev.filter(col=>col!==columnName):[...prev,columnName]);};const createUniqueList=()=>{if(selectedColumns.length===0)return;const uniqueValues=new Set();fullData.forEach(row=>{const combinedValue=selectedColumns.map(col=>row[col]).join(' - ');uniqueValues.add(combinedValue);});setUniqueList(Array.from(uniqueValues));};const handlePivotConfigChange=config=>{setPivotConfig(config);updatePivotAndChartData(config);};const updatePivotAndChartData=config=>{if(fullData.length===0)return;// Create pivot data\nconst pivotResult=fullData.reduce((acc,row)=>{const rowKey=config.rows.map(r=>row[r]).join('-');const colKey=config.cols.map(c=>row[c]).join('-');const value=config.vals.length>0?Number(row[config.vals[0]])||0:1;if(!acc[rowKey])acc[rowKey]={};if(!acc[rowKey][colKey])acc[rowKey][colKey]=0;acc[rowKey][colKey]+=value;return acc;},{});setPivotData(pivotResult);// Create chart data\nconst chartData=Object.entries(pivotResult).map(_ref=>{let[rowKey,colValues]=_ref;return{name:rowKey,...colValues};});setChartData(chartData);};useEffect(()=>{if(fullData.length>0&&(pivotConfig.rows.length>0||pivotConfig.cols.length>0)){updatePivotAndChartData(pivotConfig);}},[fullData,pivotConfig]);const operations=[{name:'Create Pivot Table',value:'pivot'},{name:'Create Chart',value:'chart'},{name:'Generate VBA Code',value:'vba'},{name:'Create Macro',value:'macro'},{name:'Summarize Data',value:'summary'},{name:'Map Data',value:'map'}];return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"h1\",{className:styles.title,children:\"Excel Analysis Web App\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"File Upload\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileUpload,accept:\".xlsx, .xls\",className:styles.fileInput}),file&&/*#__PURE__*/_jsxs(\"p\",{className:styles.fileInfo,children:[\"File uploaded: \",file.name]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.grid,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Column Information\"}),columns.length>0?/*#__PURE__*/_jsxs(\"table\",{className:styles.table,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:columns.map((col,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:col.name}),/*#__PURE__*/_jsx(\"td\",{children:col.type})]},index))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Upload a file to see column information\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Data Summary\"}),dataSummary?/*#__PURE__*/_jsxs(\"ul\",{className:styles.summaryList,children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Total Rows: \",dataSummary.rowCount]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Total Columns: \",dataSummary.columnCount]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Numeric Columns: \",dataSummary.numericColumns.join(', ')]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Categorical Columns: \",dataSummary.categoricalColumns.join(', ')]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Date Columns: \",dataSummary.dateColumns.join(', ')]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Upload a file to see data summary\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Data Preview\",dataPreview.length>0&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowFullPreview(!showFullPreview),className:styles.button,children:showFullPreview?'Show Less':'Show More'})]}),dataPreview.length>0?/*#__PURE__*/_jsx(\"div\",{className:styles.tableWrapper,children:/*#__PURE__*/_jsxs(\"table\",{className:styles.table,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>/*#__PURE__*/_jsx(\"th\",{children:col.name},col.name))})}),/*#__PURE__*/_jsx(\"tbody\",{children:(showFullPreview?fullData:dataPreview).map((row,index)=>/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>/*#__PURE__*/_jsx(\"td\",{children:col.type==='date'?row[col.name].toISOString().split('T')[0]:row[col.name]},col.name))},index))})]})}):/*#__PURE__*/_jsx(\"p\",{children:\"Upload a file to see data preview\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create Unique List\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.checkboxGroup,children:columns.map(col=>/*#__PURE__*/_jsxs(\"label\",{className:styles.checkboxLabel,children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedColumns.includes(col.name),onChange:()=>handleColumnSelect(col.name)}),/*#__PURE__*/_jsx(\"span\",{children:col.name})]},col.name))}),/*#__PURE__*/_jsx(\"button\",{onClick:createUniqueList,disabled:selectedColumns.length===0,className:styles.button,children:\"Create Unique List\"}),uniqueList.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:styles.uniqueList,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Unique Values:\"}),/*#__PURE__*/_jsx(\"ul\",{children:uniqueList.map((value,index)=>/*#__PURE__*/_jsx(\"li\",{children:value},index))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pivot Table and Chart Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.grid,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Rows\"}),/*#__PURE__*/_jsx(\"select\",{multiple:true,value:pivotConfig.rows,onChange:e=>setPivotConfig({...pivotConfig,rows:Array.from(e.target.selectedOptions,option=>option.value)}),className:styles.select,children:columns.map(col=>/*#__PURE__*/_jsx(\"option\",{value:col.name,children:col.name},col.name))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Columns\"}),/*#__PURE__*/_jsx(\"select\",{multiple:true,value:pivotConfig.cols,onChange:e=>setPivotConfig({...pivotConfig,cols:Array.from(e.target.selectedOptions,option=>option.value)}),className:styles.select,children:columns.map(col=>/*#__PURE__*/_jsx(\"option\",{value:col.name,children:col.name},col.name))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Values\"}),/*#__PURE__*/_jsxs(\"select\",{value:pivotConfig.vals[0]||'',onChange:e=>setPivotConfig({...pivotConfig,vals:[e.target.value]}),className:styles.select,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a value\"}),columns.filter(col=>col.type==='number').map(col=>/*#__PURE__*/_jsx(\"option\",{value:col.name,children:col.name},col.name))]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.tabButtons,children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('data'),className:\"\".concat(styles.button,\" \").concat(activeTab==='data'?styles.activeTab:''),children:\"Data\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('pivot'),className:\"\".concat(styles.button,\" \").concat(activeTab==='pivot'?styles.activeTab:''),children:\"Pivot Table\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('chart'),className:\"\".concat(styles.button,\" \").concat(activeTab==='chart'?styles.activeTab:''),children:\"Chart\"})]}),activeTab==='data'&&/*#__PURE__*/_jsx(\"div\",{className:styles.section,children:/*#__PURE__*/_jsx(\"h2\",{children:\"Data Preview\"})}),activeTab==='pivot'&&/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pivot Table\"}),fullData.length>0?/*#__PURE__*/_jsx(PivotTableUI,{data:fullData,onChange:handlePivotConfigChange,...pivotConfig}):/*#__PURE__*/_jsx(\"p\",{children:\"Upload a file and configure the pivot table to see results\"})]}),activeTab==='chart'&&/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Chart\"}),chartData.length>0?/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),Object.keys(chartData[0]).filter(key=>key!=='name').map((key,index)=>/*#__PURE__*/_jsx(Bar,{dataKey:key,fill:\"#\".concat(Math.floor(Math.random()*16777215).toString(16))},key))]})}):/*#__PURE__*/_jsx(\"p\",{children:\"Configure the pivot table to see the chart\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Select Operation\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.operationButtons,children:operations.map(op=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleOperationSelect(op.value),className:\"\".concat(styles.button,\" \").concat(selectedOperation===op.value?styles.activeOperation:''),disabled:!file,children:op.name},op.value))})]}),selectedOperation&&/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Operation Result\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Result for \",selectedOperation,\" operation would be displayed here\"]})]})]});};export default ExcelAnalysisApp;","map":{"version":3,"names":["React","useState","useEffect","XLSX","PivotTableUI","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","styles","jsx","_jsx","jsxs","_jsxs","ExcelAnalysisApp","file","setFile","columns","setColumns","dataSummary","setDataSummary","dataPreview","setDataPreview","selectedOperation","setSelectedOperation","showFullPreview","setShowFullPreview","selectedColumns","setSelectedColumns","uniqueList","setUniqueList","fullData","setFullData","pivotConfig","setPivotConfig","rows","cols","vals","aggregatorName","rendererName","pivotData","setPivotData","chartData","setChartData","activeTab","setActiveTab","handleFileUpload","event","uploadedFile","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","raw","dateNF","headers","slice","columnsInfo","map","name","inferColumnType","row","indexOf","processedData","Object","fromEntries","i","value","columnType","find","col","Date","Math","round","rowCount","length","columnCount","numericColumns","filter","categoricalColumns","dateColumns","readAsArrayBuffer","values","nonNullValues","v","every","isNaN","parse","handleOperationSelect","operation","handleColumnSelect","columnName","prev","includes","createUniqueList","uniqueValues","Set","forEach","combinedValue","join","add","Array","from","handlePivotConfigChange","config","updatePivotAndChartData","pivotResult","reduce","acc","rowKey","r","colKey","c","Number","entries","_ref","colValues","operations","className","container","children","title","section","onChange","accept","fileInput","fileInfo","grid","table","index","summaryList","onClick","button","tableWrapper","toISOString","split","checkboxGroup","checkboxLabel","checked","disabled","multiple","selectedOptions","option","select","tabButtons","concat","width","height","strokeDasharray","dataKey","keys","key","fill","floor","random","toString","operationButtons","op","activeOperation"],"sources":["D:/Development/React Project/Excel Web App/excelwebapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as XLSX from 'xlsx';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport styles from './app-module.css';\n\nconst ExcelAnalysisApp = () => {\n  const [file, setFile] = useState(null);\n  const [columns, setColumns] = useState([]);\n  const [dataSummary, setDataSummary] = useState(null);\n  const [dataPreview, setDataPreview] = useState([]);\n  const [selectedOperation, setSelectedOperation] = useState('');\n  const [showFullPreview, setShowFullPreview] = useState(false);\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [uniqueList, setUniqueList] = useState([]);\n  const [fullData, setFullData] = useState([]);\n  const [pivotConfig, setPivotConfig] = useState({\n    rows: [],\n    cols: [],\n    vals: [],\n    aggregatorName: \"Count\",\n    rendererName: \"Table\"\n  });\n  const [pivotData, setPivotData] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const [activeTab, setActiveTab] = useState('data');\n\n  const handleFileUpload = (event) => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, raw: false, dateNF: 'yyyy-mm-dd' });\n\n      const headers = jsonData[0];\n      const rows = jsonData.slice(1);\n\n      const columnsInfo = headers.map(header => ({\n        name: header,\n        type: inferColumnType(rows.map(row => row[headers.indexOf(header)]))\n      }));\n\n      const processedData = rows.map(row => \n        Object.fromEntries(headers.map((header, i) => {\n          const value = row[i];\n          const columnType = columnsInfo.find(col => col.name === header).type;\n          if (columnType === 'date') {\n            // Convert Excel date number to JavaScript Date object\n            return [header, new Date(Math.round((value - 25569) * 86400 * 1000))];\n          }\n          return [header, value];\n        }))\n      );\n\n      setColumns(columnsInfo);\n      setFullData(processedData);\n      setDataPreview(processedData.slice(0, 5));\n\n      setDataSummary({\n        rowCount: rows.length,\n        columnCount: headers.length,\n        numericColumns: columnsInfo.filter(col => col.type === 'number').map(col => col.name),\n        categoricalColumns: columnsInfo.filter(col => col.type === 'string').map(col => col.name),\n        dateColumns: columnsInfo.filter(col => col.type === 'date').map(col => col.name)\n      });\n    };\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  const inferColumnType = (values) => {\n    const nonNullValues = values.filter(v => v != null);\n    if (nonNullValues.every(v => !isNaN(v))) return 'number';\n    if (nonNullValues.every(v => !isNaN(Date.parse(v)))) return 'date';\n    return 'string';\n  };\n\n  const handleOperationSelect = (operation) => {\n    setSelectedOperation(operation);\n  };\n\n  const handleColumnSelect = (columnName) => {\n    setSelectedColumns(prev => \n      prev.includes(columnName) \n        ? prev.filter(col => col !== columnName)\n        : [...prev, columnName]\n    );\n  };\n\n  const createUniqueList = () => {\n    if (selectedColumns.length === 0) return;\n\n    const uniqueValues = new Set();\n    fullData.forEach(row => {\n      const combinedValue = selectedColumns.map(col => row[col]).join(' - ');\n      uniqueValues.add(combinedValue);\n    });\n\n    setUniqueList(Array.from(uniqueValues));\n  };\n  \n  const handlePivotConfigChange = (config) => {\n    setPivotConfig(config);\n    updatePivotAndChartData(config);\n  };\n  \n  const updatePivotAndChartData = (config) => {\n    if (fullData.length === 0) return;\n  \n    // Create pivot data\n    const pivotResult = fullData.reduce((acc, row) => {\n      const rowKey = config.rows.map(r => row[r]).join('-');\n      const colKey = config.cols.map(c => row[c]).join('-');\n      const value = config.vals.length > 0 ? Number(row[config.vals[0]]) || 0 : 1;\n  \n      if (!acc[rowKey]) acc[rowKey] = {};\n      if (!acc[rowKey][colKey]) acc[rowKey][colKey] = 0;\n      acc[rowKey][colKey] += value;\n  \n      return acc;\n    }, {});\n  \n    setPivotData(pivotResult);\n  \n    // Create chart data\n    const chartData = Object.entries(pivotResult).map(([rowKey, colValues]) => ({\n      name: rowKey,\n      ...colValues\n    }));\n    setChartData(chartData);\n  };\n  \n\n  useEffect(() => {\n    if (fullData.length > 0 && (pivotConfig.rows.length > 0 || pivotConfig.cols.length > 0)) {\n      updatePivotAndChartData(pivotConfig);\n    }\n  }, [fullData, pivotConfig]);\n  \n  const operations = [\n    { name: 'Create Pivot Table', value: 'pivot' },\n    { name: 'Create Chart', value: 'chart' },\n    { name: 'Generate VBA Code', value: 'vba' },\n    { name: 'Create Macro', value: 'macro' },\n    { name: 'Summarize Data', value: 'summary' },\n    { name: 'Map Data', value: 'map' }\n  ];\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Excel Analysis Web App</h1>\n      \n      <div className={styles.section}>\n        <h2>File Upload</h2>\n        <input type=\"file\" onChange={handleFileUpload} accept=\".xlsx, .xls\" className={styles.fileInput} />\n        {file && <p className={styles.fileInfo}>File uploaded: {file.name}</p>}\n      </div>\n\n      <div className={styles.grid}>\n        <div className={styles.section}>\n          <h2>Column Information</h2>\n          {columns.length > 0 ? (\n            <table className={styles.table}>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                </tr>\n              </thead>\n              <tbody>\n                {columns.map((col, index) => (\n                  <tr key={index}>\n                    <td>{col.name}</td>\n                    <td>{col.type}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p>Upload a file to see column information</p>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2>Data Summary</h2>\n          {dataSummary ? (\n            <ul className={styles.summaryList}>\n              <li>Total Rows: {dataSummary.rowCount}</li>\n              <li>Total Columns: {dataSummary.columnCount}</li>\n              <li>Numeric Columns: {dataSummary.numericColumns.join(', ')}</li>\n              <li>Categorical Columns: {dataSummary.categoricalColumns.join(', ')}</li>\n              <li>Date Columns: {dataSummary.dateColumns.join(', ')}</li>\n            </ul>\n          ) : (\n            <p>Upload a file to see data summary</p>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.section}>\n        <h2>\n          Data Preview\n          {dataPreview.length > 0 && (\n            <button onClick={() => setShowFullPreview(!showFullPreview)} className={styles.button}>\n              {showFullPreview ? 'Show Less' : 'Show More'}\n            </button>\n          )}\n        </h2>\n        {dataPreview.length > 0 ? (\n          <div className={styles.tableWrapper}>\n            <table className={styles.table}>\n              <thead>\n                <tr>\n                  {columns.map((col) => (\n                    <th key={col.name}>{col.name}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {(showFullPreview ? fullData : dataPreview).map((row, index) => (\n                  <tr key={index}>\n                    {columns.map((col) => (\n                      <td key={col.name}>\n                        {col.type === 'date' \n                          ? row[col.name].toISOString().split('T')[0] \n                          : row[col.name]}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <p>Upload a file to see data preview</p>\n        )}\n      </div>\n\n      <div className={styles.section}>\n        <h2>Create Unique List</h2>\n        <div className={styles.checkboxGroup}>\n          {columns.map((col) => (\n            <label key={col.name} className={styles.checkboxLabel}>\n              <input \n                type=\"checkbox\"\n                checked={selectedColumns.includes(col.name)}\n                onChange={() => handleColumnSelect(col.name)}\n              />\n              <span>{col.name}</span>\n            </label>\n          ))}\n        </div>\n        <button onClick={createUniqueList} disabled={selectedColumns.length === 0} className={styles.button}>\n          Create Unique List\n        </button>\n        {uniqueList.length > 0 && (\n          <div className={styles.uniqueList}>\n            <h3>Unique Values:</h3>\n            <ul>\n              {uniqueList.map((value, index) => (\n                <li key={index}>{value}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n\n      <div className={styles.section}>\n        <h2>Pivot Table and Chart Configuration</h2>\n        <div className={styles.grid}>\n          <div>\n            <h3>Rows</h3>\n            <select \n              multiple \n              value={pivotConfig.rows} \n              onChange={(e) => setPivotConfig({...pivotConfig, rows: Array.from(e.target.selectedOptions, option => option.value)})}\n              className={styles.select}\n            >\n              {columns.map(col => <option key={col.name} value={col.name}>{col.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <h3>Columns</h3>\n            <select \n              multiple \n              value={pivotConfig.cols} \n              onChange={(e) => setPivotConfig({...pivotConfig, cols: Array.from(e.target.selectedOptions, option => option.value)})}\n              className={styles.select}\n            >\n              {columns.map(col => <option key={col.name} value={col.name}>{col.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <h3>Values</h3>\n            <select \n              value={pivotConfig.vals[0] || ''} \n              onChange={(e) => setPivotConfig({...pivotConfig, vals: [e.target.value]})}\n              className={styles.select}\n            >\n              <option value=\"\">Select a value</option>\n              {columns.filter(col => col.type === 'number').map(col => <option key={col.name} value={col.name}>{col.name}</option>)}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.tabButtons}>\n        <button onClick={() => setActiveTab('data')} className={`${styles.button} ${activeTab === 'data' ? styles.activeTab : ''}`}>Data</button>\n        <button onClick={() => setActiveTab('pivot')} className={`${styles.button} ${activeTab === 'pivot' ? styles.activeTab : ''}`}>Pivot Table</button>\n        <button onClick={() => setActiveTab('chart')} className={`${styles.button} ${activeTab === 'chart' ? styles.activeTab : ''}`}>Chart</button>\n      </div>\n\n      {activeTab === 'data' && (\n        <div className={styles.section}>\n          <h2>Data Preview</h2>\n          {/* ... (keep the existing data preview table) */}\n        </div>\n      )}\n\n      {activeTab === 'pivot' && (\n        <div className={styles.section}>\n          <h2>Pivot Table</h2>\n          {fullData.length > 0 ? (\n            <PivotTableUI\n              data={fullData}\n              onChange={handlePivotConfigChange}\n              {...pivotConfig}\n            />\n          ) : (\n            <p>Upload a file and configure the pivot table to see results</p>\n          )}\n        </div>\n      )}\n\n      {activeTab === 'chart' && (\n        <div className={styles.section}>\n          <h2>Chart</h2>\n          {chartData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height={400}>\n              <BarChart data={chartData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                {Object.keys(chartData[0]).filter(key => key !== 'name').map((key, index) => (\n                  <Bar key={key} dataKey={key} fill={`#${Math.floor(Math.random()*16777215).toString(16)}`} />\n                ))}\n              </BarChart>\n            </ResponsiveContainer>\n          ) : (\n            <p>Configure the pivot table to see the chart</p>\n          )}\n        </div>\n      )}\n\n      <div className={styles.section}>\n        <h2>Select Operation</h2>\n        <div className={styles.operationButtons}>\n          {operations.map((op) => (\n            <button\n              key={op.value}\n              onClick={() => handleOperationSelect(op.value)}\n              className={`${styles.button} ${selectedOperation === op.value ? styles.activeOperation : ''}`}\n              disabled={!file}\n            >\n              {op.name}\n            </button>\n          ))}\n        </div>\n      </div>\n      \n      {selectedOperation && (\n        <div className={styles.section}>\n          <h2>Operation Result</h2>\n          <p>Result for {selectedOperation} operation would be displayed here</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExcelAnalysisApp;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,GAAK,CAAAC,IAAI,KAAM,MAAM,CAC5B,MAAO,CAAAC,YAAY,KAAM,+BAA+B,CACxD,MAAO,iCAAiC,CACxC,OAASC,QAAQ,CAAEC,GAAG,CAAEC,KAAK,CAAEC,KAAK,CAAEC,aAAa,CAAEC,OAAO,CAAEC,MAAM,CAAEC,mBAAmB,KAAQ,UAAU,CAC3G,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACsB,WAAW,CAAEC,cAAc,CAAC,CAAGvB,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACwB,WAAW,CAAEC,cAAc,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAAC0B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAAC4B,eAAe,CAAEC,kBAAkB,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAAC8B,eAAe,CAAEC,kBAAkB,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACgC,UAAU,CAAEC,aAAa,CAAC,CAAGjC,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACkC,QAAQ,CAAEC,WAAW,CAAC,CAAGnC,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACoC,WAAW,CAAEC,cAAc,CAAC,CAAGrC,QAAQ,CAAC,CAC7CsC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,EAAE,CACRC,cAAc,CAAE,OAAO,CACvBC,YAAY,CAAE,OAChB,CAAC,CAAC,CACF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAG5C,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC6C,SAAS,CAAEC,YAAY,CAAC,CAAG9C,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC+C,SAAS,CAAEC,YAAY,CAAC,CAAGhD,QAAQ,CAAC,MAAM,CAAC,CAElD,KAAM,CAAAiD,gBAAgB,CAAIC,KAAK,EAAK,CAClC,KAAM,CAAAC,YAAY,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAC1ClC,OAAO,CAACgC,YAAY,CAAC,CAErB,KAAM,CAAAG,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,MAAM,CAAIC,CAAC,EAAK,CACrB,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,UAAU,CAACF,CAAC,CAACL,MAAM,CAACQ,MAAM,CAAC,CAC5C,KAAM,CAAAC,QAAQ,CAAG3D,IAAI,CAAC4D,IAAI,CAACJ,IAAI,CAAE,CAAEK,IAAI,CAAE,OAAQ,CAAC,CAAC,CACnD,KAAM,CAAAC,SAAS,CAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC,CACxC,KAAM,CAAAC,SAAS,CAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC,CAC5C,KAAM,CAAAI,QAAQ,CAAGlE,IAAI,CAACmE,KAAK,CAACC,aAAa,CAACJ,SAAS,CAAE,CAAEK,MAAM,CAAE,CAAC,CAAEC,GAAG,CAAE,KAAK,CAAEC,MAAM,CAAE,YAAa,CAAC,CAAC,CAErG,KAAM,CAAAC,OAAO,CAAGN,QAAQ,CAAC,CAAC,CAAC,CAC3B,KAAM,CAAA9B,IAAI,CAAG8B,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAE9B,KAAM,CAAAC,WAAW,CAAGF,OAAO,CAACG,GAAG,CAACN,MAAM,GAAK,CACzCO,IAAI,CAAEP,MAAM,CACZR,IAAI,CAAEgB,eAAe,CAACzC,IAAI,CAACuC,GAAG,CAACG,GAAG,EAAIA,GAAG,CAACN,OAAO,CAACO,OAAO,CAACV,MAAM,CAAC,CAAC,CAAC,CACrE,CAAC,CAAC,CAAC,CAEH,KAAM,CAAAW,aAAa,CAAG5C,IAAI,CAACuC,GAAG,CAACG,GAAG,EAChCG,MAAM,CAACC,WAAW,CAACV,OAAO,CAACG,GAAG,CAAC,CAACN,MAAM,CAAEc,CAAC,GAAK,CAC5C,KAAM,CAAAC,KAAK,CAAGN,GAAG,CAACK,CAAC,CAAC,CACpB,KAAM,CAAAE,UAAU,CAAGX,WAAW,CAACY,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACX,IAAI,GAAKP,MAAM,CAAC,CAACR,IAAI,CACpE,GAAIwB,UAAU,GAAK,MAAM,CAAE,CACzB;AACA,MAAO,CAAChB,MAAM,CAAE,GAAI,CAAAmB,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAACN,KAAK,CAAG,KAAK,EAAI,KAAK,CAAG,IAAI,CAAC,CAAC,CAAC,CACvE,CACA,MAAO,CAACf,MAAM,CAAEe,KAAK,CAAC,CACxB,CAAC,CAAC,CACJ,CAAC,CAEDjE,UAAU,CAACuD,WAAW,CAAC,CACvBzC,WAAW,CAAC+C,aAAa,CAAC,CAC1BzD,cAAc,CAACyD,aAAa,CAACP,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAEzCpD,cAAc,CAAC,CACbsE,QAAQ,CAAEvD,IAAI,CAACwD,MAAM,CACrBC,WAAW,CAAErB,OAAO,CAACoB,MAAM,CAC3BE,cAAc,CAAEpB,WAAW,CAACqB,MAAM,CAACR,GAAG,EAAIA,GAAG,CAAC1B,IAAI,GAAK,QAAQ,CAAC,CAACc,GAAG,CAACY,GAAG,EAAIA,GAAG,CAACX,IAAI,CAAC,CACrFoB,kBAAkB,CAAEtB,WAAW,CAACqB,MAAM,CAACR,GAAG,EAAIA,GAAG,CAAC1B,IAAI,GAAK,QAAQ,CAAC,CAACc,GAAG,CAACY,GAAG,EAAIA,GAAG,CAACX,IAAI,CAAC,CACzFqB,WAAW,CAAEvB,WAAW,CAACqB,MAAM,CAACR,GAAG,EAAIA,GAAG,CAAC1B,IAAI,GAAK,MAAM,CAAC,CAACc,GAAG,CAACY,GAAG,EAAIA,GAAG,CAACX,IAAI,CACjF,CAAC,CAAC,CACJ,CAAC,CACDxB,MAAM,CAAC8C,iBAAiB,CAACjD,YAAY,CAAC,CACxC,CAAC,CAED,KAAM,CAAA4B,eAAe,CAAIsB,MAAM,EAAK,CAClC,KAAM,CAAAC,aAAa,CAAGD,MAAM,CAACJ,MAAM,CAACM,CAAC,EAAIA,CAAC,EAAI,IAAI,CAAC,CACnD,GAAID,aAAa,CAACE,KAAK,CAACD,CAAC,EAAI,CAACE,KAAK,CAACF,CAAC,CAAC,CAAC,CAAE,MAAO,QAAQ,CACxD,GAAID,aAAa,CAACE,KAAK,CAACD,CAAC,EAAI,CAACE,KAAK,CAACf,IAAI,CAACgB,KAAK,CAACH,CAAC,CAAC,CAAC,CAAC,CAAE,MAAO,MAAM,CAClE,MAAO,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAI,qBAAqB,CAAIC,SAAS,EAAK,CAC3CjF,oBAAoB,CAACiF,SAAS,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAIC,UAAU,EAAK,CACzC/E,kBAAkB,CAACgF,IAAI,EACrBA,IAAI,CAACC,QAAQ,CAACF,UAAU,CAAC,CACrBC,IAAI,CAACd,MAAM,CAACR,GAAG,EAAIA,GAAG,GAAKqB,UAAU,CAAC,CACtC,CAAC,GAAGC,IAAI,CAAED,UAAU,CAC1B,CAAC,CACH,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,GAAInF,eAAe,CAACgE,MAAM,GAAK,CAAC,CAAE,OAElC,KAAM,CAAAoB,YAAY,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAC9BjF,QAAQ,CAACkF,OAAO,CAACpC,GAAG,EAAI,CACtB,KAAM,CAAAqC,aAAa,CAAGvF,eAAe,CAAC+C,GAAG,CAACY,GAAG,EAAIT,GAAG,CAACS,GAAG,CAAC,CAAC,CAAC6B,IAAI,CAAC,KAAK,CAAC,CACtEJ,YAAY,CAACK,GAAG,CAACF,aAAa,CAAC,CACjC,CAAC,CAAC,CAEFpF,aAAa,CAACuF,KAAK,CAACC,IAAI,CAACP,YAAY,CAAC,CAAC,CACzC,CAAC,CAED,KAAM,CAAAQ,uBAAuB,CAAIC,MAAM,EAAK,CAC1CtF,cAAc,CAACsF,MAAM,CAAC,CACtBC,uBAAuB,CAACD,MAAM,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,uBAAuB,CAAID,MAAM,EAAK,CAC1C,GAAIzF,QAAQ,CAAC4D,MAAM,GAAK,CAAC,CAAE,OAE3B;AACA,KAAM,CAAA+B,WAAW,CAAG3F,QAAQ,CAAC4F,MAAM,CAAC,CAACC,GAAG,CAAE/C,GAAG,GAAK,CAChD,KAAM,CAAAgD,MAAM,CAAGL,MAAM,CAACrF,IAAI,CAACuC,GAAG,CAACoD,CAAC,EAAIjD,GAAG,CAACiD,CAAC,CAAC,CAAC,CAACX,IAAI,CAAC,GAAG,CAAC,CACrD,KAAM,CAAAY,MAAM,CAAGP,MAAM,CAACpF,IAAI,CAACsC,GAAG,CAACsD,CAAC,EAAInD,GAAG,CAACmD,CAAC,CAAC,CAAC,CAACb,IAAI,CAAC,GAAG,CAAC,CACrD,KAAM,CAAAhC,KAAK,CAAGqC,MAAM,CAACnF,IAAI,CAACsD,MAAM,CAAG,CAAC,CAAGsC,MAAM,CAACpD,GAAG,CAAC2C,MAAM,CAACnF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAI,CAAC,CAAG,CAAC,CAE3E,GAAI,CAACuF,GAAG,CAACC,MAAM,CAAC,CAAED,GAAG,CAACC,MAAM,CAAC,CAAG,CAAC,CAAC,CAClC,GAAI,CAACD,GAAG,CAACC,MAAM,CAAC,CAACE,MAAM,CAAC,CAAEH,GAAG,CAACC,MAAM,CAAC,CAACE,MAAM,CAAC,CAAG,CAAC,CACjDH,GAAG,CAACC,MAAM,CAAC,CAACE,MAAM,CAAC,EAAI5C,KAAK,CAE5B,MAAO,CAAAyC,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAENnF,YAAY,CAACiF,WAAW,CAAC,CAEzB;AACA,KAAM,CAAAhF,SAAS,CAAGsC,MAAM,CAACkD,OAAO,CAACR,WAAW,CAAC,CAAChD,GAAG,CAACyD,IAAA,MAAC,CAACN,MAAM,CAAEO,SAAS,CAAC,CAAAD,IAAA,OAAM,CAC1ExD,IAAI,CAAEkD,MAAM,CACZ,GAAGO,SACL,CAAC,EAAC,CAAC,CACHzF,YAAY,CAACD,SAAS,CAAC,CACzB,CAAC,CAGD5C,SAAS,CAAC,IAAM,CACd,GAAIiC,QAAQ,CAAC4D,MAAM,CAAG,CAAC,GAAK1D,WAAW,CAACE,IAAI,CAACwD,MAAM,CAAG,CAAC,EAAI1D,WAAW,CAACG,IAAI,CAACuD,MAAM,CAAG,CAAC,CAAC,CAAE,CACvF8B,uBAAuB,CAACxF,WAAW,CAAC,CACtC,CACF,CAAC,CAAE,CAACF,QAAQ,CAAEE,WAAW,CAAC,CAAC,CAE3B,KAAM,CAAAoG,UAAU,CAAG,CACjB,CAAE1D,IAAI,CAAE,oBAAoB,CAAEQ,KAAK,CAAE,OAAQ,CAAC,CAC9C,CAAER,IAAI,CAAE,cAAc,CAAEQ,KAAK,CAAE,OAAQ,CAAC,CACxC,CAAER,IAAI,CAAE,mBAAmB,CAAEQ,KAAK,CAAE,KAAM,CAAC,CAC3C,CAAER,IAAI,CAAE,cAAc,CAAEQ,KAAK,CAAE,OAAQ,CAAC,CACxC,CAAER,IAAI,CAAE,gBAAgB,CAAEQ,KAAK,CAAE,SAAU,CAAC,CAC5C,CAAER,IAAI,CAAE,UAAU,CAAEQ,KAAK,CAAE,KAAM,CAAC,CACnC,CAED,mBACEtE,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAAC8H,SAAU,CAAAC,QAAA,eAC/B7H,IAAA,OAAI2H,SAAS,CAAE7H,MAAM,CAACgI,KAAM,CAAAD,QAAA,CAAC,wBAAsB,CAAI,CAAC,cAExD3H,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B7H,IAAA,OAAA6H,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB7H,IAAA,UAAOiD,IAAI,CAAC,MAAM,CAAC+E,QAAQ,CAAE7F,gBAAiB,CAAC8F,MAAM,CAAC,aAAa,CAACN,SAAS,CAAE7H,MAAM,CAACoI,SAAU,CAAE,CAAC,CAClG9H,IAAI,eAAIF,KAAA,MAAGyH,SAAS,CAAE7H,MAAM,CAACqI,QAAS,CAAAN,QAAA,EAAC,iBAAe,CAACzH,IAAI,CAAC4D,IAAI,EAAI,CAAC,EACnE,CAAC,cAEN9D,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACsI,IAAK,CAAAP,QAAA,eAC1B3H,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B7H,IAAA,OAAA6H,QAAA,CAAI,oBAAkB,CAAI,CAAC,CAC1BvH,OAAO,CAAC0E,MAAM,CAAG,CAAC,cACjB9E,KAAA,UAAOyH,SAAS,CAAE7H,MAAM,CAACuI,KAAM,CAAAR,QAAA,eAC7B7H,IAAA,UAAA6H,QAAA,cACE3H,KAAA,OAAA2H,QAAA,eACE7H,IAAA,OAAA6H,QAAA,CAAI,MAAI,CAAI,CAAC,cACb7H,IAAA,OAAA6H,QAAA,CAAI,MAAI,CAAI,CAAC,EACX,CAAC,CACA,CAAC,cACR7H,IAAA,UAAA6H,QAAA,CACGvH,OAAO,CAACyD,GAAG,CAAC,CAACY,GAAG,CAAE2D,KAAK,gBACtBpI,KAAA,OAAA2H,QAAA,eACE7H,IAAA,OAAA6H,QAAA,CAAKlD,GAAG,CAACX,IAAI,CAAK,CAAC,cACnBhE,IAAA,OAAA6H,QAAA,CAAKlD,GAAG,CAAC1B,IAAI,CAAK,CAAC,GAFZqF,KAGL,CACL,CAAC,CACG,CAAC,EACH,CAAC,cAERtI,IAAA,MAAA6H,QAAA,CAAG,yCAAuC,CAAG,CAC9C,EACE,CAAC,cAEN3H,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B7H,IAAA,OAAA6H,QAAA,CAAI,cAAY,CAAI,CAAC,CACpBrH,WAAW,cACVN,KAAA,OAAIyH,SAAS,CAAE7H,MAAM,CAACyI,WAAY,CAAAV,QAAA,eAChC3H,KAAA,OAAA2H,QAAA,EAAI,cAAY,CAACrH,WAAW,CAACuE,QAAQ,EAAK,CAAC,cAC3C7E,KAAA,OAAA2H,QAAA,EAAI,iBAAe,CAACrH,WAAW,CAACyE,WAAW,EAAK,CAAC,cACjD/E,KAAA,OAAA2H,QAAA,EAAI,mBAAiB,CAACrH,WAAW,CAAC0E,cAAc,CAACsB,IAAI,CAAC,IAAI,CAAC,EAAK,CAAC,cACjEtG,KAAA,OAAA2H,QAAA,EAAI,uBAAqB,CAACrH,WAAW,CAAC4E,kBAAkB,CAACoB,IAAI,CAAC,IAAI,CAAC,EAAK,CAAC,cACzEtG,KAAA,OAAA2H,QAAA,EAAI,gBAAc,CAACrH,WAAW,CAAC6E,WAAW,CAACmB,IAAI,CAAC,IAAI,CAAC,EAAK,CAAC,EACzD,CAAC,cAELxG,IAAA,MAAA6H,QAAA,CAAG,mCAAiC,CAAG,CACxC,EACE,CAAC,EACH,CAAC,cAEN3H,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B3H,KAAA,OAAA2H,QAAA,EAAI,cAEF,CAACnH,WAAW,CAACsE,MAAM,CAAG,CAAC,eACrBhF,IAAA,WAAQwI,OAAO,CAAEA,CAAA,GAAMzH,kBAAkB,CAAC,CAACD,eAAe,CAAE,CAAC6G,SAAS,CAAE7H,MAAM,CAAC2I,MAAO,CAAAZ,QAAA,CACnF/G,eAAe,CAAG,WAAW,CAAG,WAAW,CACtC,CACT,EACC,CAAC,CACJJ,WAAW,CAACsE,MAAM,CAAG,CAAC,cACrBhF,IAAA,QAAK2H,SAAS,CAAE7H,MAAM,CAAC4I,YAAa,CAAAb,QAAA,cAClC3H,KAAA,UAAOyH,SAAS,CAAE7H,MAAM,CAACuI,KAAM,CAAAR,QAAA,eAC7B7H,IAAA,UAAA6H,QAAA,cACE7H,IAAA,OAAA6H,QAAA,CACGvH,OAAO,CAACyD,GAAG,CAAEY,GAAG,eACf3E,IAAA,OAAA6H,QAAA,CAAoBlD,GAAG,CAACX,IAAI,EAAnBW,GAAG,CAACX,IAAoB,CAClC,CAAC,CACA,CAAC,CACA,CAAC,cACRhE,IAAA,UAAA6H,QAAA,CACG,CAAC/G,eAAe,CAAGM,QAAQ,CAAGV,WAAW,EAAEqD,GAAG,CAAC,CAACG,GAAG,CAAEoE,KAAK,gBACzDtI,IAAA,OAAA6H,QAAA,CACGvH,OAAO,CAACyD,GAAG,CAAEY,GAAG,eACf3E,IAAA,OAAA6H,QAAA,CACGlD,GAAG,CAAC1B,IAAI,GAAK,MAAM,CAChBiB,GAAG,CAACS,GAAG,CAACX,IAAI,CAAC,CAAC2E,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACzC1E,GAAG,CAACS,GAAG,CAACX,IAAI,CAAC,EAHVW,GAAG,CAACX,IAIT,CACL,CAAC,EAPKsE,KAQL,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACL,CAAC,cAENtI,IAAA,MAAA6H,QAAA,CAAG,mCAAiC,CAAG,CACxC,EACE,CAAC,cAEN3H,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B7H,IAAA,OAAA6H,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3B7H,IAAA,QAAK2H,SAAS,CAAE7H,MAAM,CAAC+I,aAAc,CAAAhB,QAAA,CAClCvH,OAAO,CAACyD,GAAG,CAAEY,GAAG,eACfzE,KAAA,UAAsByH,SAAS,CAAE7H,MAAM,CAACgJ,aAAc,CAAAjB,QAAA,eACpD7H,IAAA,UACEiD,IAAI,CAAC,UAAU,CACf8F,OAAO,CAAE/H,eAAe,CAACkF,QAAQ,CAACvB,GAAG,CAACX,IAAI,CAAE,CAC5CgE,QAAQ,CAAEA,CAAA,GAAMjC,kBAAkB,CAACpB,GAAG,CAACX,IAAI,CAAE,CAC9C,CAAC,cACFhE,IAAA,SAAA6H,QAAA,CAAOlD,GAAG,CAACX,IAAI,CAAO,CAAC,GANbW,GAAG,CAACX,IAOT,CACR,CAAC,CACC,CAAC,cACNhE,IAAA,WAAQwI,OAAO,CAAErC,gBAAiB,CAAC6C,QAAQ,CAAEhI,eAAe,CAACgE,MAAM,GAAK,CAAE,CAAC2C,SAAS,CAAE7H,MAAM,CAAC2I,MAAO,CAAAZ,QAAA,CAAC,oBAErG,CAAQ,CAAC,CACR3G,UAAU,CAAC8D,MAAM,CAAG,CAAC,eACpB9E,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACoB,UAAW,CAAA2G,QAAA,eAChC7H,IAAA,OAAA6H,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvB7H,IAAA,OAAA6H,QAAA,CACG3G,UAAU,CAAC6C,GAAG,CAAC,CAACS,KAAK,CAAE8D,KAAK,gBAC3BtI,IAAA,OAAA6H,QAAA,CAAiBrD,KAAK,EAAb8D,KAAkB,CAC5B,CAAC,CACA,CAAC,EACF,CACN,EACE,CAAC,cAENpI,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B7H,IAAA,OAAA6H,QAAA,CAAI,qCAAmC,CAAI,CAAC,cAC5C3H,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACsI,IAAK,CAAAP,QAAA,eAC1B3H,KAAA,QAAA2H,QAAA,eACE7H,IAAA,OAAA6H,QAAA,CAAI,MAAI,CAAI,CAAC,cACb7H,IAAA,WACEiJ,QAAQ,MACRzE,KAAK,CAAElD,WAAW,CAACE,IAAK,CACxBwG,QAAQ,CAAGrF,CAAC,EAAKpB,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEE,IAAI,CAAEkF,KAAK,CAACC,IAAI,CAAChE,CAAC,CAACL,MAAM,CAAC4G,eAAe,CAAEC,MAAM,EAAIA,MAAM,CAAC3E,KAAK,CAAC,CAAC,CAAE,CACtHmD,SAAS,CAAE7H,MAAM,CAACsJ,MAAO,CAAAvB,QAAA,CAExBvH,OAAO,CAACyD,GAAG,CAACY,GAAG,eAAI3E,IAAA,WAAuBwE,KAAK,CAAEG,GAAG,CAACX,IAAK,CAAA6D,QAAA,CAAElD,GAAG,CAACX,IAAI,EAApCW,GAAG,CAACX,IAAyC,CAAC,CAAC,CAC1E,CAAC,EACN,CAAC,cACN9D,KAAA,QAAA2H,QAAA,eACE7H,IAAA,OAAA6H,QAAA,CAAI,SAAO,CAAI,CAAC,cAChB7H,IAAA,WACEiJ,QAAQ,MACRzE,KAAK,CAAElD,WAAW,CAACG,IAAK,CACxBuG,QAAQ,CAAGrF,CAAC,EAAKpB,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEG,IAAI,CAAEiF,KAAK,CAACC,IAAI,CAAChE,CAAC,CAACL,MAAM,CAAC4G,eAAe,CAAEC,MAAM,EAAIA,MAAM,CAAC3E,KAAK,CAAC,CAAC,CAAE,CACtHmD,SAAS,CAAE7H,MAAM,CAACsJ,MAAO,CAAAvB,QAAA,CAExBvH,OAAO,CAACyD,GAAG,CAACY,GAAG,eAAI3E,IAAA,WAAuBwE,KAAK,CAAEG,GAAG,CAACX,IAAK,CAAA6D,QAAA,CAAElD,GAAG,CAACX,IAAI,EAApCW,GAAG,CAACX,IAAyC,CAAC,CAAC,CAC1E,CAAC,EACN,CAAC,cACN9D,KAAA,QAAA2H,QAAA,eACE7H,IAAA,OAAA6H,QAAA,CAAI,QAAM,CAAI,CAAC,cACf3H,KAAA,WACEsE,KAAK,CAAElD,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC,EAAI,EAAG,CACjCsG,QAAQ,CAAGrF,CAAC,EAAKpB,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEI,IAAI,CAAE,CAACiB,CAAC,CAACL,MAAM,CAACkC,KAAK,CAAC,CAAC,CAAE,CAC1EmD,SAAS,CAAE7H,MAAM,CAACsJ,MAAO,CAAAvB,QAAA,eAEzB7H,IAAA,WAAQwE,KAAK,CAAC,EAAE,CAAAqD,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvCvH,OAAO,CAAC6E,MAAM,CAACR,GAAG,EAAIA,GAAG,CAAC1B,IAAI,GAAK,QAAQ,CAAC,CAACc,GAAG,CAACY,GAAG,eAAI3E,IAAA,WAAuBwE,KAAK,CAAEG,GAAG,CAACX,IAAK,CAAA6D,QAAA,CAAElD,GAAG,CAACX,IAAI,EAApCW,GAAG,CAACX,IAAyC,CAAC,CAAC,EAC/G,CAAC,EACN,CAAC,EACH,CAAC,EACH,CAAC,cAEN9D,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACuJ,UAAW,CAAAxB,QAAA,eAChC7H,IAAA,WAAQwI,OAAO,CAAEA,CAAA,GAAMtG,YAAY,CAAC,MAAM,CAAE,CAACyF,SAAS,IAAA2B,MAAA,CAAKxJ,MAAM,CAAC2I,MAAM,MAAAa,MAAA,CAAIrH,SAAS,GAAK,MAAM,CAAGnC,MAAM,CAACmC,SAAS,CAAG,EAAE,CAAG,CAAA4F,QAAA,CAAC,MAAI,CAAQ,CAAC,cACzI7H,IAAA,WAAQwI,OAAO,CAAEA,CAAA,GAAMtG,YAAY,CAAC,OAAO,CAAE,CAACyF,SAAS,IAAA2B,MAAA,CAAKxJ,MAAM,CAAC2I,MAAM,MAAAa,MAAA,CAAIrH,SAAS,GAAK,OAAO,CAAGnC,MAAM,CAACmC,SAAS,CAAG,EAAE,CAAG,CAAA4F,QAAA,CAAC,aAAW,CAAQ,CAAC,cAClJ7H,IAAA,WAAQwI,OAAO,CAAEA,CAAA,GAAMtG,YAAY,CAAC,OAAO,CAAE,CAACyF,SAAS,IAAA2B,MAAA,CAAKxJ,MAAM,CAAC2I,MAAM,MAAAa,MAAA,CAAIrH,SAAS,GAAK,OAAO,CAAGnC,MAAM,CAACmC,SAAS,CAAG,EAAE,CAAG,CAAA4F,QAAA,CAAC,OAAK,CAAQ,CAAC,EACzI,CAAC,CAEL5F,SAAS,GAAK,MAAM,eACnBjC,IAAA,QAAK2H,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,cAC7B7H,IAAA,OAAA6H,QAAA,CAAI,cAAY,CAAI,CAAC,CAElB,CACN,CAEA5F,SAAS,GAAK,OAAO,eACpB/B,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B7H,IAAA,OAAA6H,QAAA,CAAI,aAAW,CAAI,CAAC,CACnBzG,QAAQ,CAAC4D,MAAM,CAAG,CAAC,cAClBhF,IAAA,CAACX,YAAY,EACXuD,IAAI,CAAExB,QAAS,CACf4G,QAAQ,CAAEpB,uBAAwB,IAC9BtF,WAAW,CAChB,CAAC,cAEFtB,IAAA,MAAA6H,QAAA,CAAG,4DAA0D,CAAG,CACjE,EACE,CACN,CAEA5F,SAAS,GAAK,OAAO,eACpB/B,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B7H,IAAA,OAAA6H,QAAA,CAAI,OAAK,CAAI,CAAC,CACb9F,SAAS,CAACiD,MAAM,CAAG,CAAC,cACnBhF,IAAA,CAACH,mBAAmB,EAAC0J,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAA3B,QAAA,cAC5C3H,KAAA,CAACZ,QAAQ,EAACsD,IAAI,CAAEb,SAAU,CAAA8F,QAAA,eACxB7H,IAAA,CAACN,aAAa,EAAC+J,eAAe,CAAC,KAAK,CAAE,CAAC,cACvCzJ,IAAA,CAACR,KAAK,EAACkK,OAAO,CAAC,MAAM,CAAE,CAAC,cACxB1J,IAAA,CAACP,KAAK,GAAE,CAAC,cACTO,IAAA,CAACL,OAAO,GAAE,CAAC,cACXK,IAAA,CAACJ,MAAM,GAAE,CAAC,CACTyE,MAAM,CAACsF,IAAI,CAAC5H,SAAS,CAAC,CAAC,CAAC,CAAC,CAACoD,MAAM,CAACyE,GAAG,EAAIA,GAAG,GAAK,MAAM,CAAC,CAAC7F,GAAG,CAAC,CAAC6F,GAAG,CAAEtB,KAAK,gBACtEtI,IAAA,CAACT,GAAG,EAAWmK,OAAO,CAAEE,GAAI,CAACC,IAAI,KAAAP,MAAA,CAAMzE,IAAI,CAACiF,KAAK,CAACjF,IAAI,CAACkF,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAG,EAA/EJ,GAAiF,CAC5F,CAAC,EACM,CAAC,CACQ,CAAC,cAEtB5J,IAAA,MAAA6H,QAAA,CAAG,4CAA0C,CAAG,CACjD,EACE,CACN,cAED3H,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B7H,IAAA,OAAA6H,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzB7H,IAAA,QAAK2H,SAAS,CAAE7H,MAAM,CAACmK,gBAAiB,CAAApC,QAAA,CACrCH,UAAU,CAAC3D,GAAG,CAAEmG,EAAE,eACjBlK,IAAA,WAEEwI,OAAO,CAAEA,CAAA,GAAM3C,qBAAqB,CAACqE,EAAE,CAAC1F,KAAK,CAAE,CAC/CmD,SAAS,IAAA2B,MAAA,CAAKxJ,MAAM,CAAC2I,MAAM,MAAAa,MAAA,CAAI1I,iBAAiB,GAAKsJ,EAAE,CAAC1F,KAAK,CAAG1E,MAAM,CAACqK,eAAe,CAAG,EAAE,CAAG,CAC9FnB,QAAQ,CAAE,CAAC5I,IAAK,CAAAyH,QAAA,CAEfqC,EAAE,CAAClG,IAAI,EALHkG,EAAE,CAAC1F,KAMF,CACT,CAAC,CACC,CAAC,EACH,CAAC,CAEL5D,iBAAiB,eAChBV,KAAA,QAAKyH,SAAS,CAAE7H,MAAM,CAACiI,OAAQ,CAAAF,QAAA,eAC7B7H,IAAA,OAAA6H,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzB3H,KAAA,MAAA2H,QAAA,EAAG,aAAW,CAACjH,iBAAiB,CAAC,oCAAkC,EAAG,CAAC,EACpE,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}