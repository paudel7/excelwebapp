{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _Utilities = require('./Utilities');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n// helper function for setting row/col-span in pivotTableRenderer\nvar spanSize = function spanSize(arr, i, j) {\n  var x = void 0;\n  if (i !== 0) {\n    var asc = void 0,\n      end = void 0;\n    var noDraw = true;\n    for (x = 0, end = j, asc = end >= 0; asc ? x <= end : x >= end; asc ? x++ : x--) {\n      if (arr[i - 1][x] !== arr[i][x]) {\n        noDraw = false;\n      }\n    }\n    if (noDraw) {\n      return -1;\n    }\n  }\n  var len = 0;\n  while (i + len < arr.length) {\n    var asc1 = void 0,\n      end1 = void 0;\n    var stop = false;\n    for (x = 0, end1 = j, asc1 = end1 >= 0; asc1 ? x <= end1 : x >= end1; asc1 ? x++ : x--) {\n      if (arr[i][x] !== arr[i + len][x]) {\n        stop = true;\n      }\n    }\n    if (stop) {\n      break;\n    }\n    len++;\n  }\n  return len;\n};\nfunction redColorScaleGenerator(values) {\n  var min = Math.min.apply(Math, values);\n  var max = Math.max.apply(Math, values);\n  return function (x) {\n    // eslint-disable-next-line no-magic-numbers\n    var nonRed = 255 - Math.round(255 * (x - min) / (max - min));\n    return {\n      backgroundColor: 'rgb(255,' + nonRed + ',' + nonRed + ')'\n    };\n  };\n}\nfunction makeRenderer() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var TableRenderer = function (_React$PureComponent) {\n    _inherits(TableRenderer, _React$PureComponent);\n    function TableRenderer() {\n      _classCallCheck(this, TableRenderer);\n      return _possibleConstructorReturn(this, (TableRenderer.__proto__ || Object.getPrototypeOf(TableRenderer)).apply(this, arguments));\n    }\n    _createClass(TableRenderer, [{\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n        var pivotData = new _Utilities.PivotData(this.props);\n        var colAttrs = pivotData.props.cols;\n        var rowAttrs = pivotData.props.rows;\n        var rowKeys = pivotData.getRowKeys();\n        var colKeys = pivotData.getColKeys();\n        var grandTotalAggregator = pivotData.getAggregator([], []);\n        var valueCellColors = function valueCellColors() {};\n        var rowTotalColors = function rowTotalColors() {};\n        var colTotalColors = function colTotalColors() {};\n        if (opts.heatmapMode) {\n          var colorScaleGenerator = this.props.tableColorScaleGenerator;\n          var rowTotalValues = colKeys.map(function (x) {\n            return pivotData.getAggregator([], x).value();\n          });\n          rowTotalColors = colorScaleGenerator(rowTotalValues);\n          var colTotalValues = rowKeys.map(function (x) {\n            return pivotData.getAggregator(x, []).value();\n          });\n          colTotalColors = colorScaleGenerator(colTotalValues);\n          if (opts.heatmapMode === 'full') {\n            var allValues = [];\n            rowKeys.map(function (r) {\n              return colKeys.map(function (c) {\n                return allValues.push(pivotData.getAggregator(r, c).value());\n              });\n            });\n            var colorScale = colorScaleGenerator(allValues);\n            valueCellColors = function valueCellColors(r, c, v) {\n              return colorScale(v);\n            };\n          } else if (opts.heatmapMode === 'row') {\n            var rowColorScales = {};\n            rowKeys.map(function (r) {\n              var rowValues = colKeys.map(function (x) {\n                return pivotData.getAggregator(r, x).value();\n              });\n              rowColorScales[r] = colorScaleGenerator(rowValues);\n            });\n            valueCellColors = function valueCellColors(r, c, v) {\n              return rowColorScales[r](v);\n            };\n          } else if (opts.heatmapMode === 'col') {\n            var colColorScales = {};\n            colKeys.map(function (c) {\n              var colValues = rowKeys.map(function (x) {\n                return pivotData.getAggregator(x, c).value();\n              });\n              colColorScales[c] = colorScaleGenerator(colValues);\n            });\n            valueCellColors = function valueCellColors(r, c, v) {\n              return colColorScales[c](v);\n            };\n          }\n        }\n        var getClickHandler = this.props.tableOptions && this.props.tableOptions.clickCallback ? function (value, rowValues, colValues) {\n          var filters = {};\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n          try {\n            for (var _iterator = Object.keys(colAttrs || {})[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var i = _step.value;\n              var attr = colAttrs[i];\n              if (colValues[i] !== null) {\n                filters[attr] = colValues[i];\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n          try {\n            for (var _iterator2 = Object.keys(rowAttrs || {})[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _i = _step2.value;\n              var attr = rowAttrs[_i];\n              if (rowValues[_i] !== null) {\n                filters[attr] = rowValues[_i];\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n          return function (e) {\n            return _this2.props.tableOptions.clickCallback(e, value, filters, pivotData);\n          };\n        } : null;\n        return _react2.default.createElement('table', {\n          className: 'pvtTable'\n        }, _react2.default.createElement('thead', null, colAttrs.map(function (c, j) {\n          return _react2.default.createElement('tr', {\n            key: 'colAttr' + j\n          }, j === 0 && rowAttrs.length !== 0 && _react2.default.createElement('th', {\n            colSpan: rowAttrs.length,\n            rowSpan: colAttrs.length\n          }), _react2.default.createElement('th', {\n            className: 'pvtAxisLabel'\n          }, c), colKeys.map(function (colKey, i) {\n            var x = spanSize(colKeys, i, j);\n            if (x === -1) {\n              return null;\n            }\n            return _react2.default.createElement('th', {\n              className: 'pvtColLabel',\n              key: 'colKey' + i,\n              colSpan: x,\n              rowSpan: j === colAttrs.length - 1 && rowAttrs.length !== 0 ? 2 : 1\n            }, colKey[j]);\n          }), j === 0 && _react2.default.createElement('th', {\n            className: 'pvtTotalLabel',\n            rowSpan: colAttrs.length + (rowAttrs.length === 0 ? 0 : 1)\n          }, 'Totals'));\n        }), rowAttrs.length !== 0 && _react2.default.createElement('tr', null, rowAttrs.map(function (r, i) {\n          return _react2.default.createElement('th', {\n            className: 'pvtAxisLabel',\n            key: 'rowAttr' + i\n          }, r);\n        }), _react2.default.createElement('th', {\n          className: 'pvtTotalLabel'\n        }, colAttrs.length === 0 ? 'Totals' : null))), _react2.default.createElement('tbody', null, rowKeys.map(function (rowKey, i) {\n          var totalAggregator = pivotData.getAggregator(rowKey, []);\n          return _react2.default.createElement('tr', {\n            key: 'rowKeyRow' + i\n          }, rowKey.map(function (txt, j) {\n            var x = spanSize(rowKeys, i, j);\n            if (x === -1) {\n              return null;\n            }\n            return _react2.default.createElement('th', {\n              key: 'rowKeyLabel' + i + '-' + j,\n              className: 'pvtRowLabel',\n              rowSpan: x,\n              colSpan: j === rowAttrs.length - 1 && colAttrs.length !== 0 ? 2 : 1\n            }, txt);\n          }), colKeys.map(function (colKey, j) {\n            var aggregator = pivotData.getAggregator(rowKey, colKey);\n            return _react2.default.createElement('td', {\n              className: 'pvtVal',\n              key: 'pvtVal' + i + '-' + j,\n              onClick: getClickHandler && getClickHandler(aggregator.value(), rowKey, colKey),\n              style: valueCellColors(rowKey, colKey, aggregator.value())\n            }, aggregator.format(aggregator.value()));\n          }), _react2.default.createElement('td', {\n            className: 'pvtTotal',\n            onClick: getClickHandler && getClickHandler(totalAggregator.value(), rowKey, [null]),\n            style: colTotalColors(totalAggregator.value())\n          }, totalAggregator.format(totalAggregator.value())));\n        }), _react2.default.createElement('tr', null, _react2.default.createElement('th', {\n          className: 'pvtTotalLabel',\n          colSpan: rowAttrs.length + (colAttrs.length === 0 ? 0 : 1)\n        }, 'Totals'), colKeys.map(function (colKey, i) {\n          var totalAggregator = pivotData.getAggregator([], colKey);\n          return _react2.default.createElement('td', {\n            className: 'pvtTotal',\n            key: 'total' + i,\n            onClick: getClickHandler && getClickHandler(totalAggregator.value(), [null], colKey),\n            style: rowTotalColors(totalAggregator.value())\n          }, totalAggregator.format(totalAggregator.value()));\n        }), _react2.default.createElement('td', {\n          onClick: getClickHandler && getClickHandler(grandTotalAggregator.value(), [null], [null]),\n          className: 'pvtGrandTotal'\n        }, grandTotalAggregator.format(grandTotalAggregator.value())))));\n      }\n    }]);\n    return TableRenderer;\n  }(_react2.default.PureComponent);\n  TableRenderer.defaultProps = _Utilities.PivotData.defaultProps;\n  TableRenderer.propTypes = _Utilities.PivotData.propTypes;\n  TableRenderer.defaultProps.tableColorScaleGenerator = redColorScaleGenerator;\n  TableRenderer.defaultProps.tableOptions = {};\n  TableRenderer.propTypes.tableColorScaleGenerator = _propTypes2.default.func;\n  TableRenderer.propTypes.tableOptions = _propTypes2.default.object;\n  return TableRenderer;\n}\nvar TSVExportRenderer = function (_React$PureComponent2) {\n  _inherits(TSVExportRenderer, _React$PureComponent2);\n  function TSVExportRenderer() {\n    _classCallCheck(this, TSVExportRenderer);\n    return _possibleConstructorReturn(this, (TSVExportRenderer.__proto__ || Object.getPrototypeOf(TSVExportRenderer)).apply(this, arguments));\n  }\n  _createClass(TSVExportRenderer, [{\n    key: 'render',\n    value: function render() {\n      var pivotData = new _Utilities.PivotData(this.props);\n      var rowKeys = pivotData.getRowKeys();\n      var colKeys = pivotData.getColKeys();\n      if (rowKeys.length === 0) {\n        rowKeys.push([]);\n      }\n      if (colKeys.length === 0) {\n        colKeys.push([]);\n      }\n      var headerRow = pivotData.props.rows.map(function (r) {\n        return r;\n      });\n      if (colKeys.length === 1 && colKeys[0].length === 0) {\n        headerRow.push(this.props.aggregatorName);\n      } else {\n        colKeys.map(function (c) {\n          return headerRow.push(c.join('-'));\n        });\n      }\n      var result = rowKeys.map(function (r) {\n        var row = r.map(function (x) {\n          return x;\n        });\n        colKeys.map(function (c) {\n          var v = pivotData.getAggregator(r, c).value();\n          row.push(v ? v : '');\n        });\n        return row;\n      });\n      result.unshift(headerRow);\n      return _react2.default.createElement('textarea', {\n        value: result.map(function (r) {\n          return r.join('\\t');\n        }).join('\\n'),\n        style: {\n          width: window.innerWidth / 2,\n          height: window.innerHeight / 2\n        },\n        readOnly: true\n      });\n    }\n  }]);\n  return TSVExportRenderer;\n}(_react2.default.PureComponent);\nTSVExportRenderer.defaultProps = _Utilities.PivotData.defaultProps;\nTSVExportRenderer.propTypes = _Utilities.PivotData.propTypes;\nexports.default = {\n  Table: makeRenderer(),\n  'Table Heatmap': makeRenderer({\n    heatmapMode: 'full'\n  }),\n  'Table Col Heatmap': makeRenderer({\n    heatmapMode: 'col'\n  }),\n  'Table Row Heatmap': makeRenderer({\n    heatmapMode: 'row'\n  }),\n  'Exportable TSV': TSVExportRenderer\n};\nmodule.exports = exports['default'];","map":{"version":3,"names":["_react","require","_propTypes","_Utilities","spanSize","arr","i","j","x","asc","end","noDraw","len","length","asc1","end1","stop","redColorScaleGenerator","values","min","Math","apply","max","nonRed","round","backgroundColor","makeRenderer","opts","arguments","undefined","TableRenderer","_React$PureComponent","_inherits","_classCallCheck","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","_createClass","key","value","render","_this2","pivotData","PivotData","props","colAttrs","cols","rowAttrs","rows","rowKeys","getRowKeys","colKeys","getColKeys","grandTotalAggregator","getAggregator","valueCellColors","rowTotalColors","colTotalColors","heatmapMode","colorScaleGenerator","tableColorScaleGenerator","rowTotalValues","map","colTotalValues","allValues","r","c","push","colorScale","v","rowColorScales","rowValues","colColorScales","colValues","getClickHandler","tableOptions","clickCallback","filters","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","keys","Symbol","iterator","_step","next","done","attr","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_i","e","_react2","default","createElement","className","colSpan","rowSpan","colKey","rowKey","totalAggregator","txt","aggregator","onClick","style","format","PureComponent","defaultProps","propTypes","_propTypes2","func","object","TSVExportRenderer","headerRow","aggregatorName","join","result","row","unshift","width","window","innerWidth","height","innerHeight","readOnly","Table"],"sources":["D:\\Development\\React Project\\Excel Web App\\excelwebapp\\node_modules\\react-pivottable\\src\\TableRenderers.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {PivotData} from './Utilities';\n\n// helper function for setting row/col-span in pivotTableRenderer\nconst spanSize = function(arr, i, j) {\n  let x;\n  if (i !== 0) {\n    let asc, end;\n    let noDraw = true;\n    for (\n      x = 0, end = j, asc = end >= 0;\n      asc ? x <= end : x >= end;\n      asc ? x++ : x--\n    ) {\n      if (arr[i - 1][x] !== arr[i][x]) {\n        noDraw = false;\n      }\n    }\n    if (noDraw) {\n      return -1;\n    }\n  }\n  let len = 0;\n  while (i + len < arr.length) {\n    let asc1, end1;\n    let stop = false;\n    for (\n      x = 0, end1 = j, asc1 = end1 >= 0;\n      asc1 ? x <= end1 : x >= end1;\n      asc1 ? x++ : x--\n    ) {\n      if (arr[i][x] !== arr[i + len][x]) {\n        stop = true;\n      }\n    }\n    if (stop) {\n      break;\n    }\n    len++;\n  }\n  return len;\n};\n\nfunction redColorScaleGenerator(values) {\n  const min = Math.min.apply(Math, values);\n  const max = Math.max.apply(Math, values);\n  return x => {\n    // eslint-disable-next-line no-magic-numbers\n    const nonRed = 255 - Math.round((255 * (x - min)) / (max - min));\n    return {backgroundColor: `rgb(255,${nonRed},${nonRed})`};\n  };\n}\n\nfunction makeRenderer(opts = {}) {\n  class TableRenderer extends React.PureComponent {\n    render() {\n      const pivotData = new PivotData(this.props);\n      const colAttrs = pivotData.props.cols;\n      const rowAttrs = pivotData.props.rows;\n      const rowKeys = pivotData.getRowKeys();\n      const colKeys = pivotData.getColKeys();\n      const grandTotalAggregator = pivotData.getAggregator([], []);\n\n      let valueCellColors = () => {};\n      let rowTotalColors = () => {};\n      let colTotalColors = () => {};\n      if (opts.heatmapMode) {\n        const colorScaleGenerator = this.props.tableColorScaleGenerator;\n        const rowTotalValues = colKeys.map(x =>\n          pivotData.getAggregator([], x).value()\n        );\n        rowTotalColors = colorScaleGenerator(rowTotalValues);\n        const colTotalValues = rowKeys.map(x =>\n          pivotData.getAggregator(x, []).value()\n        );\n        colTotalColors = colorScaleGenerator(colTotalValues);\n\n        if (opts.heatmapMode === 'full') {\n          const allValues = [];\n          rowKeys.map(r =>\n            colKeys.map(c =>\n              allValues.push(pivotData.getAggregator(r, c).value())\n            )\n          );\n          const colorScale = colorScaleGenerator(allValues);\n          valueCellColors = (r, c, v) => colorScale(v);\n        } else if (opts.heatmapMode === 'row') {\n          const rowColorScales = {};\n          rowKeys.map(r => {\n            const rowValues = colKeys.map(x =>\n              pivotData.getAggregator(r, x).value()\n            );\n            rowColorScales[r] = colorScaleGenerator(rowValues);\n          });\n          valueCellColors = (r, c, v) => rowColorScales[r](v);\n        } else if (opts.heatmapMode === 'col') {\n          const colColorScales = {};\n          colKeys.map(c => {\n            const colValues = rowKeys.map(x =>\n              pivotData.getAggregator(x, c).value()\n            );\n            colColorScales[c] = colorScaleGenerator(colValues);\n          });\n          valueCellColors = (r, c, v) => colColorScales[c](v);\n        }\n      }\n\n      const getClickHandler =\n        this.props.tableOptions && this.props.tableOptions.clickCallback\n          ? (value, rowValues, colValues) => {\n              const filters = {};\n              for (const i of Object.keys(colAttrs || {})) {\n                const attr = colAttrs[i];\n                if (colValues[i] !== null) {\n                  filters[attr] = colValues[i];\n                }\n              }\n              for (const i of Object.keys(rowAttrs || {})) {\n                const attr = rowAttrs[i];\n                if (rowValues[i] !== null) {\n                  filters[attr] = rowValues[i];\n                }\n              }\n              return e =>\n                this.props.tableOptions.clickCallback(\n                  e,\n                  value,\n                  filters,\n                  pivotData\n                );\n            }\n          : null;\n\n      return (\n        <table className=\"pvtTable\">\n          <thead>\n            {colAttrs.map(function(c, j) {\n              return (\n                <tr key={`colAttr${j}`}>\n                  {j === 0 && rowAttrs.length !== 0 && (\n                    <th colSpan={rowAttrs.length} rowSpan={colAttrs.length} />\n                  )}\n                  <th className=\"pvtAxisLabel\">{c}</th>\n                  {colKeys.map(function(colKey, i) {\n                    const x = spanSize(colKeys, i, j);\n                    if (x === -1) {\n                      return null;\n                    }\n                    return (\n                      <th\n                        className=\"pvtColLabel\"\n                        key={`colKey${i}`}\n                        colSpan={x}\n                        rowSpan={\n                          j === colAttrs.length - 1 && rowAttrs.length !== 0\n                            ? 2\n                            : 1\n                        }\n                      >\n                        {colKey[j]}\n                      </th>\n                    );\n                  })}\n\n                  {j === 0 && (\n                    <th\n                      className=\"pvtTotalLabel\"\n                      rowSpan={\n                        colAttrs.length + (rowAttrs.length === 0 ? 0 : 1)\n                      }\n                    >\n                      Totals\n                    </th>\n                  )}\n                </tr>\n              );\n            })}\n\n            {rowAttrs.length !== 0 && (\n              <tr>\n                {rowAttrs.map(function(r, i) {\n                  return (\n                    <th className=\"pvtAxisLabel\" key={`rowAttr${i}`}>\n                      {r}\n                    </th>\n                  );\n                })}\n                <th className=\"pvtTotalLabel\">\n                  {colAttrs.length === 0 ? 'Totals' : null}\n                </th>\n              </tr>\n            )}\n          </thead>\n\n          <tbody>\n            {rowKeys.map(function(rowKey, i) {\n              const totalAggregator = pivotData.getAggregator(rowKey, []);\n              return (\n                <tr key={`rowKeyRow${i}`}>\n                  {rowKey.map(function(txt, j) {\n                    const x = spanSize(rowKeys, i, j);\n                    if (x === -1) {\n                      return null;\n                    }\n                    return (\n                      <th\n                        key={`rowKeyLabel${i}-${j}`}\n                        className=\"pvtRowLabel\"\n                        rowSpan={x}\n                        colSpan={\n                          j === rowAttrs.length - 1 && colAttrs.length !== 0\n                            ? 2\n                            : 1\n                        }\n                      >\n                        {txt}\n                      </th>\n                    );\n                  })}\n                  {colKeys.map(function(colKey, j) {\n                    const aggregator = pivotData.getAggregator(rowKey, colKey);\n                    return (\n                      <td\n                        className=\"pvtVal\"\n                        key={`pvtVal${i}-${j}`}\n                        onClick={\n                          getClickHandler &&\n                          getClickHandler(aggregator.value(), rowKey, colKey)\n                        }\n                        style={valueCellColors(\n                          rowKey,\n                          colKey,\n                          aggregator.value()\n                        )}\n                      >\n                        {aggregator.format(aggregator.value())}\n                      </td>\n                    );\n                  })}\n                  <td\n                    className=\"pvtTotal\"\n                    onClick={\n                      getClickHandler &&\n                      getClickHandler(totalAggregator.value(), rowKey, [null])\n                    }\n                    style={colTotalColors(totalAggregator.value())}\n                  >\n                    {totalAggregator.format(totalAggregator.value())}\n                  </td>\n                </tr>\n              );\n            })}\n\n            <tr>\n              <th\n                className=\"pvtTotalLabel\"\n                colSpan={rowAttrs.length + (colAttrs.length === 0 ? 0 : 1)}\n              >\n                Totals\n              </th>\n\n              {colKeys.map(function(colKey, i) {\n                const totalAggregator = pivotData.getAggregator([], colKey);\n                return (\n                  <td\n                    className=\"pvtTotal\"\n                    key={`total${i}`}\n                    onClick={\n                      getClickHandler &&\n                      getClickHandler(totalAggregator.value(), [null], colKey)\n                    }\n                    style={rowTotalColors(totalAggregator.value())}\n                  >\n                    {totalAggregator.format(totalAggregator.value())}\n                  </td>\n                );\n              })}\n\n              <td\n                onClick={\n                  getClickHandler &&\n                  getClickHandler(grandTotalAggregator.value(), [null], [null])\n                }\n                className=\"pvtGrandTotal\"\n              >\n                {grandTotalAggregator.format(grandTotalAggregator.value())}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n  }\n\n  TableRenderer.defaultProps = PivotData.defaultProps;\n  TableRenderer.propTypes = PivotData.propTypes;\n  TableRenderer.defaultProps.tableColorScaleGenerator = redColorScaleGenerator;\n  TableRenderer.defaultProps.tableOptions = {};\n  TableRenderer.propTypes.tableColorScaleGenerator = PropTypes.func;\n  TableRenderer.propTypes.tableOptions = PropTypes.object;\n  return TableRenderer;\n}\n\nclass TSVExportRenderer extends React.PureComponent {\n  render() {\n    const pivotData = new PivotData(this.props);\n    const rowKeys = pivotData.getRowKeys();\n    const colKeys = pivotData.getColKeys();\n    if (rowKeys.length === 0) {\n      rowKeys.push([]);\n    }\n    if (colKeys.length === 0) {\n      colKeys.push([]);\n    }\n\n    const headerRow = pivotData.props.rows.map(r => r);\n    if (colKeys.length === 1 && colKeys[0].length === 0) {\n      headerRow.push(this.props.aggregatorName);\n    } else {\n      colKeys.map(c => headerRow.push(c.join('-')));\n    }\n\n    const result = rowKeys.map(r => {\n      const row = r.map(x => x);\n      colKeys.map(c => {\n        const v = pivotData.getAggregator(r, c).value();\n        row.push(v ? v : '');\n      });\n      return row;\n    });\n\n    result.unshift(headerRow);\n\n    return (\n      <textarea\n        value={result.map(r => r.join('\\t')).join('\\n')}\n        style={{width: window.innerWidth / 2, height: window.innerHeight / 2}}\n        readOnly={true}\n      />\n    );\n  }\n}\n\nTSVExportRenderer.defaultProps = PivotData.defaultProps;\nTSVExportRenderer.propTypes = PivotData.propTypes;\n\nexport default {\n  Table: makeRenderer(),\n  'Table Heatmap': makeRenderer({heatmapMode: 'full'}),\n  'Table Col Heatmap': makeRenderer({heatmapMode: 'col'}),\n  'Table Row Heatmap': makeRenderer({heatmapMode: 'row'}),\n  'Exportable TSV': TSVExportRenderer,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}